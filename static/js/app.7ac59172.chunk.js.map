{"version":3,"sources":["src/components/ConnectedCopilotStep.tsx","src/components/CopilotStep.tsx","src/components/Button.tsx","src/components/Tooltip.tsx","src/components/style.ts","src/components/AnimatedPath.tsx","src/utilities.ts","src/components/SvgMask.tsx","src/components/CopilotModal.tsx","src/hocs/copilot.tsx","src/components/TourGuideZoneByPosition.tsx","App.tsx","web-build/register-service-worker.js","src/index.ts","src/components/TourGuideZone.tsx","src/components/CopilotWrapper.tsx"],"names":["ConnectedCopilotStep","this","props","active","register","prevProps","unregister","obj","wrapper","setNativeProps","_copilot","name","text","order","shape","maskOffset","borderRadius","registerStep","target","console","warn","unregisterStep","__TEST__","Promise","resolve","x","y","width","height","reject","measure","_ox","_oy","copilot","ref","onLayout","React","children","defaultProps","CopilotStep","context","contextTypes","PropTypes","object","Button","wrapperStyle","style","rest","View","styles","button","Text","buttonText","Tooltip","isFirstStep","isLastStep","handleNext","handlePrev","handleStop","currentStep","labels","paddingTop","alignItems","justifyContent","paddingBottom","backgroundColor","tooltipContainer","testID","tooltipText","bottomBar","TouchableOpacity","onPress","skip","previous","finish","next","STEP_NUMBER_RADIUS","STEP_NUMBER_DIAMETER","MARGIN","OFFSET_WIDTH","ARROW_SIZE","StyleSheet","create","container","position","left","top","right","bottom","zIndex","arrow","borderColor","borderWidth","tooltip","paddingHorizontal","overflow","textAlign","flex","stepNumberContainer","Z_INDEX","stepNumber","stepNumberText","fontSize","color","padding","marginTop","flexDirection","overlayRectangle","overlayContainer","AnimatedSvgPath","Platform","select","default","Animated","createAnimatedComponent","Path","web","getFirstStep","steps","Object","values","reduce","a","b","getLastStep","getStepNumber","step","filter","_step","length","getPrevStep","getNextStep","headPath","cleanPath","memoize","path","replace","trim","getCanvasPath","canvasPath","match","defaultSvgPath","size","radius","circleSvgPath","Math","max","sizeOffset","positionOffset","getMaxSegmentLength","getInterpolator","previousPath","options","maxSegmentLength","optionsKeep","single","getDefaultInterpolate","interpolate","getCircleInterpolator","toCircle","separate","windowDimensions","Dimensions","get","FIRST_PATH","IS_WEB","OS","SvgMask","mask","createRef","getPath","state","animation","to","interpolator","clamp","_value","svgMaskPathMorph","animationListener","d","current","_touchableNode","setAttribute","animate","animations","timing","toValue","duration","animationDuration","easing","useNativeDriver","opacity","push","parallel","stopTogether","start","result","finished","setState","setValue","handleLayout","nativeEvent","layout","canvasSize","Value","listenerID","addListener","removeListener","pointerEvents","fill","backdropColor","strokeWidth","fillRule","Component","Easing","linear","CopilotModal","containerVisible","tooltipTranslateY","undefined","handleLayoutChange","prev","reset","stop","renderMask","visible","setLayout","requestAnimationFrame","androidStatusBarVisible","StatusBar","currentHeight","center","relativeToLeft","relativeToTop","relativeToBottom","abs","relativeToRight","horizontalPosition","maxWidth","borderBottomColor","borderTopColor","verticalPosition","floor","_animateMove","then","TooltipComponent","tooltipComponent","key","tooltipStyle","transform","translateY","contentVisible","absoluteFill","renderTooltip","elastic","verticalOffset","WrappedComponent","CopilotClass","startTries","mounted","eventEmitter","mitt","setCurrentStep","async","move","emit","setTimeout","moveToCurrentStep","setVisibility","stepName","entries","val","fromStep","getCurrentStep","modal","animateMove","copilotEvents","currentStepNumber","childContextTypes","isRequired","hoistStatics","title","profilePhoto","marginVertical","middleView","paddingVertical","margin","row","activeSwitchContainer","marginBottom","animated","handleStepChange","log","on","off","iconProps","zone","isTourGuide","source","uri","navigator","window","addEventListener","serviceWorker","scope","info","catch","error","TourGuideZone","CopilotWrapper"],"mappings":"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","file":"static/js/app.7ac59172.chunk.js","sourcesContent":["import * as React from 'react'\n\nimport { CopilotContext, Shape } from '../types'\n\ndeclare var __TEST__: boolean\n\ninterface Props {\n  name: string\n  text: string\n  order: number\n  active?: boolean\n  shape?: Shape\n  _copilot: CopilotContext\n  children?: any\n  maskOffset?: number\n  borderRadius?: number\n}\n\nexport class ConnectedCopilotStep extends React.Component<Props> {\n  static defaultProps = {\n    active: true,\n  }\n  wrapper: any\n  componentDidMount() {\n    if (this.props.active) {\n      this.register()\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.active !== prevProps.active) {\n      if (this.props.active) {\n        this.register()\n      } else {\n        this.unregister()\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.unregister()\n  }\n\n  setNativeProps(obj: any) {\n    this.wrapper.setNativeProps(obj)\n  }\n\n  register() {\n    if (this.props._copilot) {\n      const { name, text, order, shape, maskOffset, borderRadius } = this.props\n      this.props._copilot.registerStep({\n        name,\n        text,\n        order,\n        target: this,\n        wrapper: this.wrapper,\n        shape,\n        maskOffset,\n        borderRadius,\n      })\n    } else {\n      console.warn('_copilot undefined')\n    }\n  }\n\n  unregister() {\n    this.props._copilot.unregisterStep(this.props.name)\n  }\n\n  measure() {\n    if (typeof __TEST__ !== 'undefined' && __TEST__) {\n      return new Promise((resolve) =>\n        resolve({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n        }),\n      )\n    }\n\n    return new Promise((resolve, reject) => {\n      const measure = () => {\n        // Wait until the wrapper element appears\n        if (this.wrapper && this.wrapper.measure) {\n          this.wrapper.measure(\n            (\n              _ox: number,\n              _oy: number,\n              width: number,\n              height: number,\n              x: number,\n              y: number,\n            ) =>\n              resolve({\n                x,\n                y,\n                width,\n                height,\n              }),\n            reject,\n          )\n        } else {\n          // requestAnimationFrame(measure)\n          measure()\n        }\n      }\n\n      // requestAnimationFrame(measure)\n      measure()\n    })\n  }\n\n  render() {\n    const copilot = {\n      ref: (wrapper: any) => {\n        this.wrapper = wrapper\n      },\n      onLayout: () => {}, // Android hack\n    }\n\n    return React.cloneElement(this.props.children, { copilot })\n  }\n}\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ConnectedCopilotStep } from './ConnectedCopilotStep'\nimport { CopilotContext, Shape } from '../types'\n\ninterface Props {\n  name: string\n  order: number\n  text: string\n  shape?: Shape\n  active?: boolean\n  maskOffset?: number\n  borderRadius?: number\n}\n\nexport class CopilotStep extends React.Component<Props> {\n  static contextTypes = {\n    _copilot: PropTypes.object,\n  }\n\n  context: {\n    _copilot: CopilotContext\n  }\n\n  render() {\n    return (\n      <ConnectedCopilotStep\n        {...{ ...this.props, _copilot: this.context._copilot }}\n      />\n    )\n  }\n}\n","import * as React from 'react'\nimport { View, Text, StyleProp, ViewStyle } from 'react-native'\n\nimport styles from './style'\n\ninterface Props {\n  wrapperStyle?: StyleProp<ViewStyle>\n  style?: StyleProp<ViewStyle>\n  children?: any\n}\n\nexport const Button = ({ wrapperStyle, style, children, ...rest }: Props) => (\n  <View style={[styles.button, wrapperStyle]}>\n    <Text style={[styles.buttonText, style]} {...rest}>\n      {children}\n    </Text>\n  </View>\n)\n","import * as React from 'react'\nimport { View, Text, TouchableOpacity } from 'react-native'\n\nimport { Button } from './Button'\nimport styles from './style'\nimport { Step, Labels } from '../types'\n\nexport interface TooltipProps {\n  isFirstStep?: boolean\n  isLastStep?: boolean\n  currentStep: Step\n  labels?: Labels\n  handleNext?(): void\n  handlePrev?(): void\n  handleStop?(): void\n}\n\nexport const Tooltip = ({\n  isFirstStep,\n  isLastStep,\n  handleNext,\n  handlePrev,\n  handleStop,\n  currentStep,\n  labels,\n}: TooltipProps) => (\n  <View\n    style={{\n      borderRadius: 16,\n      paddingTop: 24,\n      alignItems: 'center',\n      justifyContent: 'center',\n      paddingBottom: 16,\n      width: '80%',\n      backgroundColor: '#ffffffef',\n    }}\n  >\n    <View style={styles.tooltipContainer}>\n      <Text testID='stepDescription' style={styles.tooltipText}>\n        {currentStep.text}\n      </Text>\n    </View>\n    <View style={[styles.bottomBar]}>\n      {!isLastStep ? (\n        <TouchableOpacity onPress={handleStop}>\n          <Button>{labels?.skip || 'Skip'}</Button>\n        </TouchableOpacity>\n      ) : null}\n      {!isFirstStep ? (\n        <TouchableOpacity onPress={handlePrev}>\n          <Button>{labels?.previous || 'Previous'}</Button>\n        </TouchableOpacity>\n      ) : null}\n      {!isLastStep ? (\n        <TouchableOpacity onPress={handleNext}>\n          <Button>{labels?.next || 'Next'}</Button>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity onPress={handleStop}>\n          <Button>{labels?.finish || 'Finish'}</Button>\n        </TouchableOpacity>\n      )}\n    </View>\n  </View>\n)\n","import { StyleSheet } from 'react-native'\n\nexport const STEP_NUMBER_RADIUS: number = 14\nexport const STEP_NUMBER_DIAMETER: number = STEP_NUMBER_RADIUS * 2\nexport const Z_INDEX: number = 100\nexport const MARGIN: number = 13\nexport const OFFSET_WIDTH: number = 4\nexport const ARROW_SIZE: number = 6\n\nexport default StyleSheet.create({\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: Z_INDEX,\n  },\n  arrow: {\n    position: 'absolute',\n    borderColor: 'transparent',\n    borderWidth: ARROW_SIZE,\n  },\n  tooltip: {\n    position: 'absolute',\n    paddingHorizontal: 15,\n    overflow: 'hidden',\n    width: '100%',\n    borderRadius: 16,\n    paddingTop: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 16,\n  },\n  tooltipText: {\n    textAlign: 'center',\n  },\n  tooltipContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    width: '80%',\n  },\n  stepNumberContainer: {\n    position: 'absolute',\n    width: STEP_NUMBER_DIAMETER,\n    height: STEP_NUMBER_DIAMETER,\n    overflow: 'hidden',\n    zIndex: Z_INDEX + 1,\n  },\n  stepNumber: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    borderRadius: STEP_NUMBER_RADIUS,\n    borderColor: '#FFFFFF',\n    backgroundColor: '#27ae60',\n  },\n  stepNumberText: {\n    fontSize: 10,\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n  },\n  button: {\n    padding: 10,\n  },\n  buttonText: {\n    color: '#27ae60',\n  },\n  bottomBar: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  overlayRectangle: {\n    position: 'absolute',\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  },\n  overlayContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  },\n})\n","import * as React from 'react'\nimport { Animated, Platform } from 'react-native'\nimport { Path, PathProps } from 'react-native-svg'\n\nexport const AnimatedSvgPath: React.ComponentType<\n  PathProps & { ref: any }\n> = Platform.select({\n  default: Animated.createAnimatedComponent(Path),\n  web: Path,\n})\n","import {\n  Step,\n  Steps,\n  SVGMaskPathMorphParam,\n  ValueXY,\n  Shape,\n  SvgPath,\n} from './types'\n// @ts-ignore\nimport { interpolate, toCircle, separate } from 'flubber'\nimport memoize from 'memoize-one'\nimport clamp from 'lodash.clamp'\n\nexport const getFirstStep = (steps: Steps): Step | null =>\n  steps &&\n  Object.values(steps).reduce(\n    (a: Step | null, b) => (!a || a.order > b.order ? b : a),\n    null,\n  )\n\nexport const getLastStep = (steps: Steps): Step | null =>\n  steps &&\n  Object.values(steps).reduce(\n    (a: Step | null, b) => (!a || a.order < b.order ? b : a),\n    null,\n  )\n\nexport const getStepNumber = (steps: Steps, step?: Step): number | undefined =>\n  step &&\n  Object.values(steps).filter((_step) => _step.order <= step.order).length\n\nexport const getPrevStep = (steps: Steps, step?: Step): Step | null =>\n  Object.values(steps)\n    .filter((_step) => _step.order < step!.order)\n    .reduce((a: Step | null, b) => (!a || a.order < b.order ? b : a), null)\n\nexport const getNextStep = (\n  steps: Steps,\n  step?: Step,\n): Step | null | undefined =>\n  Object.values(steps)\n    .filter((_step) => _step.order > step!.order)\n    .reduce((a: Step | null, b) => (!a || a.order > b.order ? b : a), null) ||\n  step\n\nconst headPath = /^M0,0H\\d*\\.?\\d*V\\d*\\.?\\d*H0V0Z/\nconst cleanPath = memoize((path: string) => path.replace(headPath, '').trim())\nconst getCanvasPath = memoize((path: string) => {\n  const canvasPath = path.match(headPath)\n  if (canvasPath) {\n    return canvasPath[0]\n  }\n  return ''\n})\n\nexport const defaultSvgPath = ({\n  size,\n  position,\n  borderRadius: radius,\n}: {\n  size: ValueXY\n  position: ValueXY\n  borderRadius: number\n}): SvgPath => {\n  if (radius) {\n    return `M${position.x},${position.y}H${\n      position.x + size.x\n    } a${radius},${radius} 0 0 1 ${radius},${radius}V${\n      position.y + size.y - radius\n    } a${radius},${radius} 0 0 1 -${radius},${radius}H${\n      position.x\n    } a${radius},${radius} 0 0 1 -${radius},-${radius}V${\n      position.y + radius\n    } a${radius},${radius} 0 0 1 ${radius},-${radius}Z`\n  }\n  return `M${position.x},${position.y}H${position.x + size.x}V${\n    position.y + size.y\n  }H${position.x}V${position.y}Z`\n}\n\nexport const circleSvgPath = ({\n  size,\n  position,\n}: {\n  size: ValueXY\n  position: ValueXY\n}): SvgPath => {\n  const radius = Math.max(size.x, size.y) / 2\n  return `M${position.x},${position.y}A${radius} ${radius} 0 1 0 ${\n    radius * 2\n  } 0 ${radius} ${radius} 0 1 0 -${radius * 2} 0`\n}\n\nconst sizeOffset = memoize((size: ValueXY, maskOffset: number = 0) =>\n  maskOffset\n    ? {\n        x: size.x + maskOffset,\n        y: size.y + maskOffset,\n      }\n    : size,\n)\n\nconst positionOffset = memoize((position: ValueXY, maskOffset: number = 0) =>\n  maskOffset\n    ? {\n        x: position.x - maskOffset / 2,\n        y: position.y - maskOffset / 2,\n      }\n    : position,\n)\n\nconst getMaxSegmentLength = (shape: Shape) => {\n  switch (shape) {\n    case 'circle':\n    case 'circle_and_keep':\n      return 7\n    case 'rectangle_and_keep':\n      return 25\n\n    default:\n      return 15\n  }\n}\n\nconst getInterpolator = memoize(\n  (\n    previousPath: string,\n    shape: Shape,\n    position: ValueXY,\n    size: ValueXY,\n    maskOffset: number = 0,\n    borderRadius: number = 0,\n  ) => {\n    const options = {\n      maxSegmentLength: getMaxSegmentLength(shape),\n    }\n    const optionsKeep = { single: true }\n    const getDefaultInterpolate = () =>\n      interpolate(\n        previousPath,\n        defaultSvgPath({\n          size: sizeOffset(size, maskOffset),\n          position: positionOffset(position, maskOffset),\n          borderRadius,\n        }),\n        options,\n      )\n    const getCircleInterpolator = () =>\n      toCircle(\n        previousPath,\n        position.x + size.x / 2,\n        position.y + size.y / 2,\n        Math.max(size.x, size.y) / 2 + maskOffset,\n        options,\n      )\n    switch (shape) {\n      case 'circle':\n        return getCircleInterpolator()\n      case 'rectangle':\n        return getDefaultInterpolate()\n      case 'circle_and_keep':\n        return separate(\n          previousPath,\n          [\n            previousPath,\n            circleSvgPath({ size: sizeOffset(size, maskOffset), position }),\n          ],\n          optionsKeep,\n        )\n      case 'rectangle_and_keep':\n        return separate(\n          previousPath,\n          [\n            defaultSvgPath({\n              size: sizeOffset(size, maskOffset),\n              position: positionOffset(position, maskOffset),\n              borderRadius,\n            }),\n            previousPath,\n          ],\n          optionsKeep,\n        )\n      default:\n        return getDefaultInterpolate()\n    }\n  },\n)\n\nexport const svgMaskPathMorph = ({\n  previousPath,\n  animation,\n  to: { position, size, shape, maskOffset, borderRadius },\n}: SVGMaskPathMorphParam) => {\n  const interpolator = getInterpolator(\n    cleanPath(previousPath),\n    shape!,\n    position,\n    size,\n    maskOffset,\n    borderRadius,\n  )\n\n  return `${getCanvasPath(previousPath)}${interpolator(\n    clamp(animation._value, 0, 1),\n  )}`\n}\n","import React, { Component } from 'react'\nimport {\n  View,\n  Animated,\n  Easing,\n  Dimensions,\n  StyleProp,\n  ViewStyle,\n  LayoutChangeEvent,\n  Platform,\n} from 'react-native'\nimport Svg, { PathProps } from 'react-native-svg'\n\nimport { AnimatedSvgPath } from './AnimatedPath'\nimport { ValueXY, Step } from '../types'\nimport { svgMaskPathMorph } from '../utilities'\n\nconst windowDimensions = Dimensions.get('window')\n\ninterface Props {\n  size: ValueXY\n  position: ValueXY\n  style: StyleProp<ViewStyle>\n  animationDuration?: number\n  backdropColor: string\n  maskOffset?: number\n  borderRadius?: number\n  currentStep?: Step\n  easing?: (value: number) => number\n}\n\ninterface State {\n  size: ValueXY\n  position: ValueXY\n  opacity: Animated.Value\n  animation: Animated.Value\n  canvasSize: ValueXY\n  previousPath: string\n}\n\nconst FIRST_PATH = `M0,0H${windowDimensions.width}V${\n  windowDimensions.height\n}H0V0ZM${windowDimensions.width / 2},${\n  windowDimensions.height / 2\n} h 1 v 1 h -1 Z`\n\nconst IS_WEB = Platform.OS !== 'web'\n\nexport class SvgMask extends Component<Props, State> {\n  static defaultProps = {\n    easing: Easing.linear,\n    size: { x: 0, y: 0 },\n    position: { x: 0, y: 0 },\n    maskOffset: 0,\n  }\n\n  listenerID: string\n  mask: React.RefObject<PathProps> = React.createRef()\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      canvasSize: {\n        x: windowDimensions.width,\n        y: windowDimensions.height,\n      },\n      size: props.size,\n      position: props.position,\n      opacity: new Animated.Value(0),\n      animation: new Animated.Value(0),\n      previousPath: FIRST_PATH,\n    }\n\n    this.listenerID = this.state.animation.addListener(this.animationListener)\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.position !== this.props.position ||\n      prevProps.size !== this.props.size\n    ) {\n      this.animate()\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.listenerID) {\n      this.state.animation.removeListener(this.listenerID)\n    }\n  }\n\n  getPath = () => {\n    const { previousPath, animation } = this.state\n    const { size, position, currentStep, maskOffset, borderRadius } = this.props\n    return svgMaskPathMorph({\n      animation: animation as any,\n      previousPath,\n      to: {\n        position,\n        size,\n        shape: currentStep?.shape,\n        maskOffset: currentStep?.maskOffset || maskOffset,\n        borderRadius: currentStep?.borderRadius || borderRadius,\n      },\n    })\n  }\n\n  animationListener = () => {\n    const d = this.getPath()\n    if (this.mask && this.mask.current) {\n      if (IS_WEB) {\n        // @ts-ignore\n        this.mask.current.setNativeProps({ d })\n      } else {\n        // @ts-ignore\n        this.mask.current._touchableNode.setAttribute('d', d)\n      }\n    }\n  }\n\n  animate = () => {\n    const animations = [\n      Animated.timing(this.state.animation, {\n        toValue: 1,\n        duration: this.props.animationDuration,\n        easing: this.props.easing,\n        useNativeDriver: false,\n      }),\n    ]\n    // @ts-ignore\n    if (this.state.opacity._value !== 1) {\n      animations.push(\n        Animated.timing(this.state.opacity, {\n          toValue: 1,\n          duration: this.props.animationDuration,\n          easing: this.props.easing,\n          useNativeDriver: true,\n        }),\n      )\n    }\n    Animated.parallel(animations, { stopTogether: false }).start((result) => {\n      if (result.finished) {\n        this.setState({ previousPath: this.getPath() }, () => {\n          // @ts-ignore\n          if (this.state.animation._value === 1) {\n            this.state.animation.setValue(0)\n          }\n        })\n      }\n    })\n  }\n\n  handleLayout = ({\n    nativeEvent: {\n      layout: { width, height },\n    },\n  }: LayoutChangeEvent) => {\n    this.setState({\n      canvasSize: {\n        x: width,\n        y: height,\n      },\n    })\n  }\n\n  render() {\n    if (!this.state.canvasSize) {\n      return null\n    }\n    return (\n      <View\n        style={this.props.style}\n        onLayout={this.handleLayout}\n        pointerEvents='none'\n      >\n        <Svg\n          pointerEvents='none'\n          width={this.state.canvasSize.x}\n          height={this.state.canvasSize.y}\n        >\n          <AnimatedSvgPath\n            ref={this.mask}\n            fill={this.props.backdropColor}\n            strokeWidth={0}\n            fillRule='evenodd'\n            d={FIRST_PATH}\n            opacity={this.state.opacity as any}\n          />\n        </Svg>\n      </View>\n    )\n  }\n}\n","import * as React from 'react'\nimport {\n  Animated,\n  Easing,\n  View,\n  StatusBar,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n  Dimensions,\n} from 'react-native'\nimport { TooltipProps, Tooltip } from './Tooltip'\nimport styles, {\n  MARGIN,\n  ARROW_SIZE,\n  STEP_NUMBER_DIAMETER,\n  STEP_NUMBER_RADIUS,\n} from './style'\nimport { Step, ValueXY, Labels } from '../types'\nimport { SvgMask } from './SvgMask'\n\ndeclare var __TEST__: boolean\n\ninterface Props {\n  currentStepNumber: number\n  currentStep?: Step\n  visible: boolean\n  isFirstStep: boolean\n  isLastStep: boolean\n  animationDuration?: number\n  tooltipComponent: React.ComponentType<TooltipProps>\n  tooltipStyle?: StyleProp<ViewStyle>\n  maskOffset?: number\n  borderRadius?: number\n  androidStatusBarVisible: boolean\n  backdropColor: string\n  labels: Labels\n  easing(value: number): number\n  stop(): void\n  next(): void\n  prev(): void\n}\n\ninterface Layout {\n  x?: number\n  y?: number\n  width?: number\n  height?: number\n}\n\ninterface State {\n  tooltip: object\n  notAnimated?: boolean\n  containerVisible: boolean\n  layout?: Layout\n  size?: ValueXY\n  position?: ValueXY\n}\n\ninterface Move {\n  top: number\n  left: number\n  width: number\n  height: number\n}\n\nconst { width } = Dimensions.get('window')\n\nexport class CopilotModal extends React.Component<Props, State> {\n  static defaultProps = {\n    easing: Easing.elastic(0.7),\n    animationDuration: 400,\n    tooltipComponent: Tooltip as any,\n    tooltipStyle: {},\n    androidStatusBarVisible: false,\n    backdropColor: 'rgba(0, 0, 0, 0.4)',\n    labels: {},\n  }\n\n  layout?: Layout = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  }\n\n  state = {\n    tooltip: {},\n    containerVisible: false,\n    tooltipTranslateY: new Animated.Value(width / 2),\n    layout: undefined,\n    size: undefined,\n    position: undefined,\n  }\n\n  constructor(props: Props) {\n    super(props)\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible === true && this.props.visible === false) {\n      this.reset()\n    }\n  }\n\n  handleLayoutChange = ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n    this.layout = layout\n  }\n\n  measure(): Promise<Layout> {\n    if (typeof __TEST__ !== 'undefined' && __TEST__) {\n      return new Promise((resolve) =>\n        resolve({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n        }),\n      )\n    }\n\n    return new Promise((resolve) => {\n      const setLayout = () => {\n        if (this.layout && this.layout.width !== 0) {\n          resolve(this.layout)\n        } else {\n          requestAnimationFrame(setLayout)\n        }\n      }\n      setLayout()\n    })\n  }\n\n  async _animateMove(\n    obj: Move = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n    },\n  ) {\n    const layout = await this.measure()\n    if (!this.props.androidStatusBarVisible && Platform.OS === 'android') {\n      obj.top -= StatusBar.currentHeight || 30\n    }\n\n    let stepNumberLeft = obj.left - STEP_NUMBER_RADIUS\n\n    if (stepNumberLeft < 0) {\n      stepNumberLeft = obj.left + obj.width - STEP_NUMBER_RADIUS\n      if (stepNumberLeft > layout.width! - STEP_NUMBER_DIAMETER) {\n        stepNumberLeft = layout.width! - STEP_NUMBER_DIAMETER\n      }\n    }\n\n    const center = {\n      x: obj.left! + obj.width! / 2,\n      y: obj.top! + obj.height! / 2,\n    }\n\n    const relativeToLeft = center.x\n    const relativeToTop = center.y\n    const relativeToBottom = Math.abs(center.y - layout.height!)\n    const relativeToRight = Math.abs(center.x - layout.width!)\n\n    const verticalPosition = relativeToBottom > relativeToTop ? 'bottom' : 'top'\n    const horizontalPosition =\n      relativeToLeft > relativeToRight ? 'left' : 'right'\n\n    const tooltip = {\n      top: 0,\n      tooltip: 0,\n      bottom: 0,\n      right: 0,\n      maxWidth: 0,\n      left: 0,\n    }\n    const arrow = {\n      borderBottomColor: '',\n      top: 0,\n      borderTopColor: '',\n      bottom: 0,\n      right: 0,\n      left: 0,\n    }\n\n    if (verticalPosition === 'bottom') {\n      tooltip.top = obj.top + obj.height + MARGIN\n      arrow.borderBottomColor = '#fff'\n      arrow.top = tooltip.top - ARROW_SIZE * 2\n    } else {\n      tooltip.bottom = layout.height! - (obj.top - MARGIN)\n      arrow.borderTopColor = '#fff'\n      arrow.bottom = tooltip.bottom - ARROW_SIZE * 2\n    }\n\n    if (horizontalPosition === 'left') {\n      tooltip.right = Math.max(layout.width! - (obj.left + obj.width), 0)\n      tooltip.right =\n        tooltip.right === 0 ? tooltip.right + MARGIN : tooltip.right\n      tooltip.maxWidth = layout.width! - tooltip.right - MARGIN\n      arrow.right = tooltip.right + MARGIN\n    } else {\n      tooltip.left = Math.max(obj.left, 0)\n      tooltip.left = tooltip.left === 0 ? tooltip.left + MARGIN : tooltip.left\n      tooltip.maxWidth = layout.width! - tooltip.left - MARGIN\n      arrow.left = tooltip.left + MARGIN\n    }\n\n    Animated.timing(this.state.tooltipTranslateY, {\n      toValue:\n        verticalPosition === 'bottom' ? tooltip.top : obj.top - MARGIN - 125,\n      duration: this.props.animationDuration,\n      easing: this.props.easing,\n      useNativeDriver: true,\n    }).start()\n\n    this.setState({\n      tooltip,\n      layout,\n      size: {\n        x: obj.width,\n        y: obj.height,\n      },\n      position: {\n        x: Math.floor(Math.max(obj.left, 0)),\n        y: Math.floor(Math.max(obj.top, 0)),\n      },\n    })\n  }\n\n  animateMove(obj = {}): Promise<void> {\n    return new Promise((resolve) => {\n      this.setState({ containerVisible: true }, () =>\n        this._animateMove(obj as any).then(resolve),\n      )\n    })\n  }\n\n  reset() {\n    this.setState({\n      containerVisible: false,\n      layout: undefined,\n    })\n  }\n\n  handleNext = () => {\n    this.props.next()\n  }\n\n  handlePrev = () => {\n    this.props.prev()\n  }\n\n  handleStop = () => {\n    this.reset()\n    this.props.stop()\n  }\n\n  renderMask = () => (\n    <SvgMask\n      style={styles.overlayContainer}\n      size={this.state.size!}\n      position={this.state.position!}\n      easing={this.props.easing}\n      animationDuration={this.props.animationDuration}\n      backdropColor={this.props.backdropColor}\n      currentStep={this.props.currentStep}\n      maskOffset={this.props.maskOffset}\n      borderRadius={this.props.borderRadius}\n    />\n  )\n\n  renderTooltip() {\n    const { tooltipComponent: TooltipComponent } = this.props\n    return (\n      <Animated.View\n        key='tooltip'\n        style={[\n          styles.tooltip,\n          this.props.tooltipStyle,\n          { transform: [{ translateY: this.state.tooltipTranslateY }] },\n        ]}\n      >\n        <TooltipComponent\n          isFirstStep={this.props.isFirstStep}\n          isLastStep={this.props.isLastStep}\n          currentStep={this.props.currentStep!}\n          handleNext={this.handleNext}\n          handlePrev={this.handlePrev}\n          handleStop={this.handleStop}\n          labels={this.props.labels}\n        />\n      </Animated.View>\n    )\n  }\n\n  render() {\n    const containerVisible = this.state.containerVisible || this.props.visible\n    const contentVisible = this.state.layout && containerVisible\n    if (!containerVisible) {\n      return null\n    }\n    return (\n      <View\n        style={[StyleSheet.absoluteFill, { backgroundColor: 'transparent' }]}\n        pointerEvents='box-none'\n      >\n        <View\n          style={styles.container}\n          onLayout={this.handleLayoutChange}\n          pointerEvents='box-none'\n        >\n          {contentVisible && (\n            <>\n              {this.renderMask()}\n              {this.renderTooltip()}\n            </>\n          )}\n        </View>\n      </View>\n    )\n  }\n}\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { View, StyleProp, ViewStyle } from 'react-native'\n\nimport mitt from 'mitt'\nimport hoistStatics from 'hoist-non-react-statics'\n\nimport { CopilotModal } from '../components/CopilotModal'\nimport { OFFSET_WIDTH } from '../components/style'\n\nimport {\n  getFirstStep,\n  getLastStep,\n  getStepNumber,\n  getPrevStep,\n  getNextStep,\n} from '../utilities'\n\nimport { Step, Steps, StepObject, Labels } from '../types'\nimport { TooltipProps } from '../components/Tooltip'\n\n/*\nThis is the maximum wait time for the steps to be registered before starting the tutorial\nAt 60fps means 2 seconds\n*/\nconst MAX_START_TRIES = 120\n\ninterface State {\n  steps?: Steps\n  currentStep?: Step\n  visible: boolean\n  androidStatusBarVisible?: boolean\n  backdropColor?: string\n  stopOnOutsideClick?: boolean\n}\n\nexport interface CopilotOptionProps {\n  tooltipComponent?: React.ComponentType<TooltipProps>\n  tooltipStyle?: StyleProp<ViewStyle>\n  labels?: Labels\n  androidStatusBarVisible?: boolean\n  backdropColor?: string\n  stopOnOutsideClick?: boolean\n  verticalOffset?: number\n  wrapperStyle?: StyleProp<ViewStyle>\n  maskOffset?: number\n  borderRadius?: number\n  animationDuration?: number\n}\n\nexport const copilot = ({\n  tooltipComponent,\n  tooltipStyle,\n  labels,\n  androidStatusBarVisible,\n  backdropColor,\n  verticalOffset = 0,\n  wrapperStyle,\n  animationDuration,\n  maskOffset,\n  borderRadius,\n}: CopilotOptionProps = {}) => (WrappedComponent: any): any => {\n  class CopilotClass extends React.Component<any, State> {\n    state: State = {\n      steps: undefined,\n      currentStep: undefined,\n      visible: false,\n    }\n\n    startTries = 0\n\n    mounted = false\n\n    eventEmitter = new mitt()\n\n    modal: any\n\n    constructor(props: any) {\n      super(props)\n    }\n\n    getChildContext() {\n      return {\n        _copilot: {\n          registerStep: this.registerStep,\n          unregisterStep: this.unregisterStep,\n          getCurrentStep: () => this.state.currentStep!,\n        },\n      }\n    }\n\n    componentDidMount() {\n      this.mounted = true\n    }\n\n    componentWillUnmount() {\n      this.mounted = false\n    }\n\n    getStepNumber = (\n      step: Step | undefined = this.state.currentStep,\n    ): number | undefined => getStepNumber(this.state.steps!, step)\n\n    getFirstStep = (): Step | undefined | null =>\n      getFirstStep(this.state.steps!)\n\n    getLastStep = (): Step | undefined | null => getLastStep(this.state.steps!)\n\n    getPrevStep = (\n      step: Step | undefined = this.state.currentStep,\n    ): Step | undefined | null => getPrevStep(this.state.steps!, step)\n\n    getNextStep = (\n      step: Step | undefined = this.state.currentStep,\n    ): Step | undefined | null => getNextStep(this.state.steps!, step)\n\n    setCurrentStep = async (\n      step: Step,\n      move: boolean = true,\n    ): Promise<void> => {\n      this.setState({ currentStep: step })\n      this.eventEmitter.emit('stepChange', step)\n\n      setTimeout(() => {\n        if (move) {\n          this.moveToCurrentStep()\n        }\n      }, 0)\n    }\n\n    setVisibility = (visible: boolean): Promise<void> =>\n      new Promise((resolve) => {\n        this.setState({ visible }, () => resolve())\n      })\n\n    isFirstStep = (): boolean => this.state.currentStep === this.getFirstStep()\n\n    isLastStep = (): boolean => this.state.currentStep === this.getLastStep()\n\n    registerStep = (step: Step): void => {\n      this.setState(({ steps }) => ({\n        steps: {\n          ...steps,\n          [step.name]: step,\n        },\n      }))\n    }\n\n    unregisterStep = (stepName: string): void => {\n      if (!this.mounted) {\n        return\n      }\n      this.setState(({ steps }) => ({\n        steps: Object.entries(steps as StepObject)\n          .filter(([key]) => key !== stepName)\n          .reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {}),\n      }))\n    }\n\n    next = async (): Promise<void> => {\n      await this.setCurrentStep(this.getNextStep()!)\n    }\n\n    prev = async (): Promise<void> => {\n      await this.setCurrentStep(this.getPrevStep()!)\n    }\n\n    start = async (fromStep?: string): Promise<void> => {\n      const { steps } = this.state\n\n      const currentStep = fromStep\n        ? (steps as StepObject)[fromStep]\n        : this.getFirstStep()\n\n      if (this.startTries > MAX_START_TRIES) {\n        this.startTries = 0\n        return\n      }\n\n      if (!currentStep) {\n        this.startTries += 1\n        // requestAnimationFrame(() => this.start(fromStep))\n        this.start(fromStep)\n      } else {\n        this.eventEmitter.emit('start')\n        await this.setCurrentStep(currentStep)\n        await this.moveToCurrentStep()\n        await this.setVisibility(true)\n        this.startTries = 0\n      }\n    }\n\n    stop = async (): Promise<void> => {\n      await this.setVisibility(false)\n      this.eventEmitter.emit('stop')\n    }\n\n    async moveToCurrentStep(): Promise<void> {\n      const size = await this.state.currentStep!.target.measure()\n\n      await this.modal.animateMove({\n        width: size.width + OFFSET_WIDTH,\n        height: size.height + OFFSET_WIDTH,\n        left: size.x - OFFSET_WIDTH / 2,\n        top: size.y - OFFSET_WIDTH / 2 + verticalOffset,\n      })\n    }\n\n    render() {\n      return (\n        <View style={wrapperStyle || { flex: 1 }}>\n          <WrappedComponent\n            {...this.props}\n            start={this.start}\n            stop={this.stop}\n            currentStep={this.state.currentStep}\n            visible={this.state.visible}\n            copilotEvents={this.eventEmitter}\n          />\n          <CopilotModal\n            ref={(modal: any) => {\n              this.modal = modal\n            }}\n            next={this.next}\n            prev={this.prev}\n            stop={this.stop}\n            visible={this.state.visible}\n            isFirstStep={this.isFirstStep()}\n            isLastStep={this.isLastStep()}\n            currentStepNumber={this.getStepNumber()!}\n            currentStep={this.state.currentStep}\n            labels={labels}\n            tooltipComponent={tooltipComponent}\n            tooltipStyle={tooltipStyle}\n            androidStatusBarVisible={androidStatusBarVisible}\n            backdropColor={backdropColor}\n            animationDuration={animationDuration}\n            maskOffset={maskOffset}\n            borderRadius={borderRadius}\n          />\n        </View>\n      )\n    }\n  }\n  // @ts-ignore\n  CopilotClass.childContextTypes = {\n    _copilot: PropTypes.object.isRequired,\n  }\n\n  return hoistStatics(CopilotClass, WrappedComponent)\n}\n","import * as React from 'react'\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native'\nimport { TourGuideZone } from './TourGuideZone'\nimport { CopilotWrapper } from './CopilotWrapper'\nimport { Shape } from '../types'\n\ninterface TourGuideZoneByPositionProps {\n  zone: number\n  isTourGuide?: boolean\n  top?: number\n  left?: number\n  right?: number\n  bottom?: number\n  width?: number\n  height?: number\n  shape?: Shape\n  containerStyle?: StyleProp<ViewStyle>\n}\n\nexport const TourGuideZoneByPosition = ({\n  isTourGuide,\n  zone,\n  width,\n  height,\n  top,\n  left,\n  right,\n  bottom,\n  shape,\n  containerStyle,\n}: TourGuideZoneByPositionProps) => {\n  if (!isTourGuide) {\n    return null\n  }\n\n  return (\n    <View\n      pointerEvents='none'\n      style={[StyleSheet.absoluteFillObject, containerStyle]}\n    >\n      <TourGuideZone zone={zone} isTourGuide shape={shape}>\n        <CopilotWrapper\n          style={{\n            height,\n            width,\n            top,\n            right,\n            bottom,\n            left,\n          }}\n        />\n      </TourGuideZone>\n    </View>\n  )\n}\n","import * as React from 'react'\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native'\nimport { Ionicons } from '@expo/vector-icons'\n\nimport {\n  copilot,\n  TourGuideZone,\n  CopilotWrapper,\n  Step,\n  TourGuideZoneByPosition,\n} from './src'\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: 40,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n  },\n  profilePhoto: {\n    width: 140,\n    height: 140,\n    borderRadius: 70,\n    marginVertical: 20,\n  },\n  middleView: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  button: {\n    backgroundColor: '#2980b9',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    margin: 2,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n  },\n  row: {\n    width: '100%',\n    padding: 15,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  activeSwitchContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    alignItems: 'center',\n    paddingHorizontal: 40,\n  },\n})\n\ninterface Props {\n  copilotEvents: any\n  start(stepNumber?: number): void\n  stop(): void\n}\n\nfunction App({ copilotEvents, start, stop }: Props) {\n  const handleStepChange = (step: Step) =>\n    console.log(`Current step is: ${step.name}`)\n\n  React.useEffect(() => {\n    copilotEvents.on('stepChange', handleStepChange)\n\n    return () => {\n      copilotEvents.off('*')\n    }\n  }, [])\n  const iconProps = { size: 40, color: '#888' }\n  return (\n    <>\n      <View style={styles.container}>\n        <TourGuideZone\n          zone={2}\n          isTourGuide\n          text={'A react-native-copilot remastered! 🎉'}\n          borderRadius={16}\n        >\n          <CopilotWrapper>\n            <Text style={styles.title}>\n              {'Welcome to the demo of\\n\"rn-tourguide\"'}\n            </Text>\n          </CopilotWrapper>\n        </TourGuideZone>\n        <View style={styles.middleView}>\n          <TouchableOpacity style={styles.button} onPress={() => start()}>\n            <Text style={styles.buttonText}>START THE TUTORIAL!</Text>\n          </TouchableOpacity>\n\n          <TourGuideZone zone={3} isTourGuide shape={'rectangle_and_keep'}>\n            <CopilotWrapper>\n              <TouchableOpacity style={styles.button} onPress={() => start(4)}>\n                <Text style={styles.buttonText}>Step 4</Text>\n              </TouchableOpacity>\n            </CopilotWrapper>\n          </TourGuideZone>\n          <TouchableOpacity style={styles.button} onPress={() => start(2)}>\n            <Text style={styles.buttonText}>Step 2</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.button} onPress={stop}>\n            <Text style={styles.buttonText}>Stop</Text>\n          </TouchableOpacity>\n          <TourGuideZone\n            zone={1}\n            isTourGuide\n            shape='circle'\n            text={'With animated SVG morphing with awesome flubber 🍮💯'}\n          >\n            <CopilotWrapper>\n              <Image\n                source={{\n                  uri:\n                    'https://pbs.twimg.com/profile_images/1223192265969016833/U8AX9Lfn_400x400.jpg',\n                }}\n                style={styles.profilePhoto}\n              />\n            </CopilotWrapper>\n          </TourGuideZone>\n        </View>\n        <View style={styles.row}>\n          <TourGuideZone zone={4} isTourGuide shape={'circle'}>\n            <CopilotWrapper>\n              <Ionicons name='ios-contact' {...iconProps} />\n            </CopilotWrapper>\n          </TourGuideZone>\n          <Ionicons name='ios-chatbubbles' {...iconProps} />\n          <Ionicons name='ios-globe' {...iconProps} />\n          <TourGuideZone zone={5} isTourGuide>\n            <CopilotWrapper>\n              <Ionicons name='ios-navigate' {...iconProps} />\n            </CopilotWrapper>\n          </TourGuideZone>\n          <TourGuideZone zone={6} isTourGuide shape={'circle'}>\n            <CopilotWrapper>\n              <Ionicons name='ios-rainy' {...iconProps} />\n            </CopilotWrapper>\n          </TourGuideZone>\n        </View>\n      </View>\n    </>\n  )\n}\n\n// {/* <TourGuideZoneByPosition\n//         zone={7}\n//         shape={'circle'}\n//         isTourGuide\n//         bottom={30}\n//         left={35}\n//         width={300}\n//         height={300}\n//       /> */}\n\nexport default copilot({\n  animated: true,\n  androidStatusBarVisible: false,\n  borderRadius: 16,\n})(App)\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/rn-tourguide/expo-service-worker.js', { scope: '/rn-tourguide/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","export { CopilotStep } from './components/CopilotStep'\nexport { copilot, CopilotOptionProps } from './hocs/copilot'\nexport { TourGuideZone } from './components/TourGuideZone'\nexport { TooltipProps } from './components/Tooltip'\nexport { TourGuideZoneByPosition } from './components/TourGuideZoneByPosition'\nexport { CopilotWrapper } from './components/CopilotWrapper'\nexport * from './types'\n","import * as React from 'react'\nimport { CopilotStep } from './CopilotStep'\nimport { Shape } from '../types'\n\ninterface TourGuideZoneProps {\n  zone: number\n  isTourGuide?: boolean\n  text?: string\n  shape?: Shape\n  maskOffset?: number\n  borderRadius?: number\n  children: React.ReactNode\n}\n\nexport const TourGuideZone = ({\n  isTourGuide,\n  zone,\n  children,\n  shape,\n  text,\n  maskOffset,\n  borderRadius,\n}: TourGuideZoneProps) => {\n  if (!isTourGuide) {\n    return <>{children}</>\n  }\n\n  return (\n    <CopilotStep\n      text={text ?? `Zone ${zone}`}\n      order={zone}\n      name={`${zone}`}\n      shape={shape}\n      maskOffset={maskOffset}\n      borderRadius={borderRadius}\n    >\n      {children}\n    </CopilotStep>\n  )\n}\n","import * as React from 'react'\nimport { View, StyleProp, ViewStyle } from 'react-native'\n\ninterface CopilotWrapperProps {\n  copilot?: any\n  children?: React.ReactNode\n  style?: StyleProp<ViewStyle>\n}\nexport const CopilotWrapper = ({\n  copilot,\n  children,\n  style,\n}: CopilotWrapperProps) => (\n  <View style={style} {...copilot}>\n    {children}\n  </View>\n)\n"],"sourceRoot":""}