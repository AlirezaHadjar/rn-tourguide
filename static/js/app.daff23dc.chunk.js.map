{"version":3,"sources":["src/components/Button.tsx","src/components/Tooltip.tsx","src/components/CopilotWrapper.tsx","src/components/style.ts","src/components/TourGuideZoneByPosition.tsx","src/hooks/useTourGuideController.ts","src/components/AnimatedPath.tsx","src/utilities.ts","src/components/SvgMask.tsx","src/components/CopilotModal.tsx","src/components/TourGuideProvider.tsx","src/hooks/useIsMounted.ts","App.tsx","web-build/register-service-worker.js","src/index.ts","src/components/TourGuideContext.ts","src/components/ConnectedCopilotStep.tsx","src/components/CopilotStep.tsx","src/components/TourGuideZone.tsx"],"names":["Button","wrapperStyle","style","children","rest","View","styles","button","Text","buttonText","Tooltip","isFirstStep","isLastStep","handleNext","handlePrev","handleStop","currentStep","labels","borderRadius","paddingTop","alignItems","justifyContent","paddingBottom","width","backgroundColor","tooltipContainer","testID","tooltipText","text","bottomBar","TouchableOpacity","onPress","skip","previous","finish","next","CopilotWrapper","copilot","STEP_NUMBER_RADIUS","STEP_NUMBER_DIAMETER","MARGIN","OFFSET_WIDTH","ARROW_SIZE","StyleSheet","create","container","position","left","top","right","bottom","zIndex","arrow","borderColor","borderWidth","tooltip","paddingHorizontal","overflow","textAlign","flex","stepNumberContainer","height","Z_INDEX","stepNumber","stepNumberText","fontSize","color","padding","marginTop","flexDirection","overlayRectangle","overlayContainer","useTourGuideController","React","TourGuideContext","start","stop","eventEmitter","getCurrentStep","AnimatedSvgPath","Platform","select","default","Animated","createAnimatedComponent","Path","web","getPrevStep","steps","step","Object","values","filter","_step","order","reduce","a","b","getNextStep","headPath","cleanPath","memoize","path","replace","trim","getCanvasPath","canvasPath","match","defaultSvgPath","size","radius","x","y","circleSvgPath","Math","max","sizeOffset","maskOffset","positionOffset","getMaxSegmentLength","shape","getInterpolator","previousPath","options","maxSegmentLength","optionsKeep","single","getDefaultInterpolate","interpolate","getCircleInterpolator","toCircle","separate","windowDimensions","Dimensions","get","FIRST_PATH","IS_WEB","OS","SvgMask","props","mask","createRef","getPath","state","animation","to","interpolator","clamp","_value","svgMaskPathMorph","animationListener","d","rafID","requestAnimationFrame","current","setNativeProps","_touchableNode","setAttribute","animate","animations","timing","toValue","duration","animationDuration","easing","useNativeDriver","opacity","push","parallel","stopTogether","result","finished","setState","setValue","handleLayout","nativeEvent","layout","canvasSize","console","log","Value","listenerID","addListener","prevProps","this","removeListener","cancelAnimationFrame","onLayout","pointerEvents","ref","fill","backdropColor","strokeWidth","fillRule","Component","defaultProps","Easing","linear","CopilotModal","containerVisible","tooltipTranslateY","undefined","handleLayoutChange","prev","reset","renderMask","visible","__TEST__","Promise","resolve","setLayout","obj","measure","androidStatusBarVisible","StatusBar","currentHeight","center","relativeToLeft","relativeToTop","relativeToBottom","abs","relativeToRight","horizontalPosition","maxWidth","borderBottomColor","borderTopColor","verticalPosition","translateAnim","delay","opacityAnim","floor","_animateMove","then","TooltipComponent","tooltipComponent","key","tooltipStyle","transform","translateY","contentVisible","absoluteFill","renderTooltip","elastic","useMemo","useEffect","useState","useRef","TourGuideProvider","verticalOffset","setVisible","updateCurrentStep","setSteps","startTries","setStartTries","name","mounted","isMounted","useIsMounted","mitt","modal","emit","moveToCurrentStep","async","target","animateMove","setCurrentStep","getFirstStep","utils","getLastStep","Provider","value","registerStep","previousSteps","unregisterStep","stepName","entries","val","fromStep","AppContent","iconProps","on","off","zone","title","middleView","source","uri","profilePhoto","row","marginVertical","paddingVertical","margin","activeSwitchContainer","marginBottom","App","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error","ConnectedCopilotStep","active","unregister","wrapper","_copilot","warn","reject","_ox","_oy","CopilotStep","TourGuideZone","isTourGuide"],"mappings":"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","file":"static/js/app.daff23dc.chunk.js","sourcesContent":["import * as React from 'react'\nimport { View, Text, StyleProp, ViewStyle } from 'react-native'\n\nimport styles from './style'\n\ninterface Props {\n  wrapperStyle?: StyleProp<ViewStyle>\n  style?: StyleProp<ViewStyle>\n  children?: any\n}\n\nexport const Button = ({ wrapperStyle, style, children, ...rest }: Props) => (\n  <View style={[styles.button, wrapperStyle]}>\n    <Text style={[styles.buttonText, style]} {...rest}>\n      {children}\n    </Text>\n  </View>\n)\n","import * as React from 'react'\nimport { View, Text, TouchableOpacity } from 'react-native'\n\nimport { Button } from './Button'\nimport styles from './style'\nimport { Step, Labels } from '../types'\n\nexport interface TooltipProps {\n  isFirstStep?: boolean\n  isLastStep?: boolean\n  currentStep: Step\n  labels?: Labels\n  handleNext?(): void\n  handlePrev?(): void\n  handleStop?(): void\n}\n\nexport const Tooltip = ({\n  isFirstStep,\n  isLastStep,\n  handleNext,\n  handlePrev,\n  handleStop,\n  currentStep,\n  labels,\n}: TooltipProps) => (\n  <View\n    style={{\n      borderRadius: 16,\n      paddingTop: 24,\n      alignItems: 'center',\n      justifyContent: 'center',\n      paddingBottom: 16,\n      width: '80%',\n      backgroundColor: '#ffffffef',\n    }}\n  >\n    <View style={styles.tooltipContainer}>\n      <Text testID='stepDescription' style={styles.tooltipText}>\n        {currentStep.text}\n      </Text>\n    </View>\n    <View style={[styles.bottomBar]}>\n      {!isLastStep ? (\n        <TouchableOpacity onPress={handleStop}>\n          <Button>{labels?.skip || 'Skip'}</Button>\n        </TouchableOpacity>\n      ) : null}\n      {!isFirstStep ? (\n        <TouchableOpacity onPress={handlePrev}>\n          <Button>{labels?.previous || 'Previous'}</Button>\n        </TouchableOpacity>\n      ) : null}\n      {!isLastStep ? (\n        <TouchableOpacity onPress={handleNext}>\n          <Button>{labels?.next || 'Next'}</Button>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity onPress={handleStop}>\n          <Button>{labels?.finish || 'Finish'}</Button>\n        </TouchableOpacity>\n      )}\n    </View>\n  </View>\n)\n","import * as React from 'react'\nimport { View, StyleProp, ViewStyle } from 'react-native'\n\ninterface CopilotWrapperProps {\n  copilot?: any\n  children?: React.ReactNode\n  style?: StyleProp<ViewStyle>\n}\nexport const CopilotWrapper = ({\n  copilot,\n  children,\n  style,\n}: CopilotWrapperProps) => (\n  <View style={style} {...copilot}>\n    {children}\n  </View>\n)\n","import { StyleSheet } from 'react-native'\n\nexport const STEP_NUMBER_RADIUS: number = 14\nexport const STEP_NUMBER_DIAMETER: number = STEP_NUMBER_RADIUS * 2\nexport const Z_INDEX: number = 100\nexport const MARGIN: number = 13\nexport const OFFSET_WIDTH: number = 4\nexport const ARROW_SIZE: number = 6\n\nexport default StyleSheet.create({\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: Z_INDEX,\n  },\n  arrow: {\n    position: 'absolute',\n    borderColor: 'transparent',\n    borderWidth: ARROW_SIZE,\n  },\n  tooltip: {\n    position: 'absolute',\n    paddingHorizontal: 15,\n    overflow: 'hidden',\n    width: '100%',\n    borderRadius: 16,\n    paddingTop: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 16,\n  },\n  tooltipText: {\n    textAlign: 'center',\n  },\n  tooltipContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    width: '80%',\n  },\n  stepNumberContainer: {\n    position: 'absolute',\n    width: STEP_NUMBER_DIAMETER,\n    height: STEP_NUMBER_DIAMETER,\n    overflow: 'hidden',\n    zIndex: Z_INDEX + 1,\n  },\n  stepNumber: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    borderRadius: STEP_NUMBER_RADIUS,\n    borderColor: '#FFFFFF',\n    backgroundColor: '#27ae60',\n  },\n  stepNumberText: {\n    fontSize: 10,\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n  },\n  button: {\n    padding: 10,\n  },\n  buttonText: {\n    color: '#27ae60',\n  },\n  bottomBar: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  overlayRectangle: {\n    position: 'absolute',\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  },\n  overlayContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  },\n})\n","import * as React from 'react'\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native'\nimport { TourGuideZone } from './TourGuideZone'\nimport { CopilotWrapper } from './CopilotWrapper'\nimport { Shape } from '../types'\n\ninterface TourGuideZoneByPositionProps {\n  zone: number\n  isTourGuide?: boolean\n  top?: number\n  left?: number\n  right?: number\n  bottom?: number\n  width?: number\n  height?: number\n  shape?: Shape\n  containerStyle?: StyleProp<ViewStyle>\n}\n\nexport const TourGuideZoneByPosition = ({\n  isTourGuide,\n  zone,\n  width,\n  height,\n  top,\n  left,\n  right,\n  bottom,\n  shape,\n  containerStyle,\n}: TourGuideZoneByPositionProps) => {\n  if (!isTourGuide) {\n    return null\n  }\n\n  return (\n    <View\n      pointerEvents='none'\n      style={[StyleSheet.absoluteFillObject, containerStyle]}\n    >\n      <TourGuideZone zone={zone} isTourGuide shape={shape}>\n        <CopilotWrapper\n          style={{\n            height,\n            width,\n            top,\n            right,\n            bottom,\n            left,\n          }}\n        />\n      </TourGuideZone>\n    </View>\n  )\n}\n","import * as React from 'react'\nimport { TourGuideContext } from '../components/TourGuideContext'\n\nexport const useTourGuideController = () => {\n  const { start, stop, eventEmitter, getCurrentStep } = React.useContext(\n    TourGuideContext,\n  )\n  return {\n    start,\n    stop,\n    eventEmitter,\n    getCurrentStep,\n  }\n}\n","import * as React from 'react'\nimport { Animated, Platform } from 'react-native'\nimport { Path, PathProps } from 'react-native-svg'\n\nexport const AnimatedSvgPath: React.ComponentType<\n  PathProps & { ref: any }\n> = Platform.select({\n  default: Animated.createAnimatedComponent(Path),\n  web: Path,\n})\n","import {\n  Step,\n  Steps,\n  SVGMaskPathMorphParam,\n  ValueXY,\n  Shape,\n  SvgPath,\n} from './types'\n// @ts-ignore\nimport { interpolate, toCircle, separate } from 'flubber'\nimport memoize from 'memoize-one'\nimport clamp from 'lodash.clamp'\n\nexport const getFirstStep = (steps: Steps): Step | null =>\n  steps &&\n  Object.values(steps).reduce(\n    (a: Step | null, b) => (!a || a.order > b.order ? b : a),\n    null,\n  )\n\nexport const getLastStep = (steps: Steps): Step | null =>\n  steps &&\n  Object.values(steps).reduce(\n    (a: Step | null, b) => (!a || a.order < b.order ? b : a),\n    null,\n  )\n\nexport const getStepNumber = (steps: Steps, step?: Step): number | undefined =>\n  step &&\n  Object.values(steps).filter((_step) => _step.order <= step.order).length\n\nexport const getPrevStep = (steps: Steps, step?: Step): Step | null =>\n  Object.values(steps)\n    .filter((_step) => _step.order < step!.order)\n    .reduce((a: Step | null, b) => (!a || a.order < b.order ? b : a), null)\n\nexport const getNextStep = (\n  steps: Steps,\n  step?: Step,\n): Step | null | undefined =>\n  Object.values(steps)\n    .filter((_step) => _step.order > step!.order)\n    .reduce((a: Step | null, b) => (!a || a.order > b.order ? b : a), null) ||\n  step\n\nconst headPath = /^M0,0H\\d*\\.?\\d*V\\d*\\.?\\d*H0V0Z/\nconst cleanPath = memoize((path: string) => path.replace(headPath, '').trim())\nconst getCanvasPath = memoize((path: string) => {\n  const canvasPath = path.match(headPath)\n  if (canvasPath) {\n    return canvasPath[0]\n  }\n  return ''\n})\n\nexport const defaultSvgPath = ({\n  size,\n  position,\n  borderRadius: radius,\n}: {\n  size: ValueXY\n  position: ValueXY\n  borderRadius: number\n}): SvgPath => {\n  if (radius) {\n    return `M${position.x},${position.y}H${\n      position.x + size.x\n    } a${radius},${radius} 0 0 1 ${radius},${radius}V${\n      position.y + size.y - radius\n    } a${radius},${radius} 0 0 1 -${radius},${radius}H${\n      position.x\n    } a${radius},${radius} 0 0 1 -${radius},-${radius}V${\n      position.y + radius\n    } a${radius},${radius} 0 0 1 ${radius},-${radius}Z`\n  }\n  return `M${position.x},${position.y}H${position.x + size.x}V${\n    position.y + size.y\n  }H${position.x}V${position.y}Z`\n}\n\nexport const circleSvgPath = ({\n  size,\n  position,\n}: {\n  size: ValueXY\n  position: ValueXY\n}): SvgPath => {\n  const radius = Math.max(size.x, size.y) / 2\n  return `M${position.x},${position.y}A${radius} ${radius} 0 1 0 ${\n    radius * 2\n  } 0 ${radius} ${radius} 0 1 0 -${radius * 2} 0`\n}\n\nconst sizeOffset = memoize((size: ValueXY, maskOffset: number = 0) =>\n  maskOffset\n    ? {\n        x: size.x + maskOffset,\n        y: size.y + maskOffset,\n      }\n    : size,\n)\n\nconst positionOffset = memoize((position: ValueXY, maskOffset: number = 0) =>\n  maskOffset\n    ? {\n        x: position.x - maskOffset / 2,\n        y: position.y - maskOffset / 2,\n      }\n    : position,\n)\n\nconst getMaxSegmentLength = (shape: Shape) => {\n  switch (shape) {\n    case 'circle':\n    case 'circle_and_keep':\n      return 7\n    case 'rectangle_and_keep':\n      return 25\n\n    default:\n      return 15\n  }\n}\n\nconst getInterpolator = memoize(\n  (\n    previousPath: string,\n    shape: Shape,\n    position: ValueXY,\n    size: ValueXY,\n    maskOffset: number = 0,\n    borderRadius: number = 0,\n  ) => {\n    const options = {\n      maxSegmentLength: getMaxSegmentLength(shape),\n    }\n    const optionsKeep = { single: true }\n    const getDefaultInterpolate = () =>\n      interpolate(\n        previousPath,\n        defaultSvgPath({\n          size: sizeOffset(size, maskOffset),\n          position: positionOffset(position, maskOffset),\n          borderRadius,\n        }),\n        options,\n      )\n    const getCircleInterpolator = () =>\n      toCircle(\n        previousPath,\n        position.x + size.x / 2,\n        position.y + size.y / 2,\n        Math.max(size.x, size.y) / 2 + maskOffset,\n        options,\n      )\n    switch (shape) {\n      case 'circle':\n        return getCircleInterpolator()\n      case 'rectangle':\n        return getDefaultInterpolate()\n      case 'circle_and_keep':\n        return separate(\n          previousPath,\n          [\n            previousPath,\n            circleSvgPath({ size: sizeOffset(size, maskOffset), position }),\n          ],\n          optionsKeep,\n        )\n      case 'rectangle_and_keep':\n        return separate(\n          previousPath,\n          [\n            defaultSvgPath({\n              size: sizeOffset(size, maskOffset),\n              position: positionOffset(position, maskOffset),\n              borderRadius,\n            }),\n            previousPath,\n          ],\n          optionsKeep,\n        )\n      default:\n        return getDefaultInterpolate()\n    }\n  },\n)\n\nexport const svgMaskPathMorph = ({\n  previousPath,\n  animation,\n  to: { position, size, shape, maskOffset, borderRadius },\n}: SVGMaskPathMorphParam) => {\n  const interpolator = getInterpolator(\n    cleanPath(previousPath),\n    shape!,\n    position,\n    size,\n    maskOffset,\n    borderRadius,\n  )\n\n  return `${getCanvasPath(previousPath)}${interpolator(\n    clamp(animation._value, 0, 1),\n  )}`\n}\n","import React, { Component } from 'react'\nimport {\n  View,\n  Animated,\n  Easing,\n  Dimensions,\n  StyleProp,\n  ViewStyle,\n  LayoutChangeEvent,\n  Platform,\n} from 'react-native'\nimport Svg, { PathProps } from 'react-native-svg'\n\nimport { AnimatedSvgPath } from './AnimatedPath'\nimport { ValueXY, Step } from '../types'\nimport { svgMaskPathMorph } from '../utilities'\n\nconst windowDimensions = Dimensions.get('window')\n\ninterface Props {\n  size: ValueXY\n  position: ValueXY\n  style: StyleProp<ViewStyle>\n  animationDuration?: number\n  backdropColor: string\n  maskOffset?: number\n  borderRadius?: number\n  currentStep?: Step\n  easing?(value: number): number\n}\n\ninterface State {\n  size: ValueXY\n  position: ValueXY\n  opacity: Animated.Value\n  animation: Animated.Value\n  canvasSize: ValueXY\n  previousPath: string\n}\n\nconst FIRST_PATH = `M0,0H${windowDimensions.width}V${\n  windowDimensions.height\n}H0V0ZM${windowDimensions.width / 2},${\n  windowDimensions.height / 2\n} h 1 v 1 h -1 Z`\n\nconst IS_WEB = Platform.OS !== 'web'\n\nexport class SvgMask extends Component<Props, State> {\n  static defaultProps = {\n    easing: Easing.linear,\n    size: { x: 0, y: 0 },\n    position: { x: 0, y: 0 },\n    maskOffset: 0,\n  }\n\n  listenerID: string\n  rafID: number\n  mask: React.RefObject<PathProps> = React.createRef()\n\n  constructor(props: Props) {\n    super(props)\n    console.log('SvgMask')\n\n    this.state = {\n      canvasSize: {\n        x: windowDimensions.width,\n        y: windowDimensions.height,\n      },\n      size: props.size,\n      position: props.position,\n      opacity: new Animated.Value(0),\n      animation: new Animated.Value(0),\n      previousPath: FIRST_PATH,\n    }\n\n    this.listenerID = this.state.animation.addListener(this.animationListener)\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.position !== this.props.position ||\n      prevProps.size !== this.props.size\n    ) {\n      console.log('animate')\n      this.animate()\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.listenerID) {\n      this.state.animation.removeListener(this.listenerID)\n    }\n    if (this.rafID) {\n      cancelAnimationFrame(this.rafID)\n    }\n  }\n\n  getPath = () => {\n    const { previousPath, animation } = this.state\n    const { size, position, currentStep, maskOffset, borderRadius } = this.props\n    return svgMaskPathMorph({\n      animation: animation as any,\n      previousPath,\n      to: {\n        position,\n        size,\n        shape: currentStep?.shape,\n        maskOffset: currentStep?.maskOffset || maskOffset,\n        borderRadius: currentStep?.borderRadius || borderRadius,\n      },\n    })\n  }\n\n  animationListener = () => {\n    const d = this.getPath()\n    this.rafID = requestAnimationFrame(() => {\n      if (this.mask && this.mask.current) {\n        if (IS_WEB) {\n          // @ts-ignore\n          this.mask.current.setNativeProps({ d })\n        } else {\n          // @ts-ignore\n          this.mask.current._touchableNode.setAttribute('d', d)\n        }\n      }\n    })\n  }\n\n  animate = () => {\n    const animations = [\n      Animated.timing(this.state.animation, {\n        toValue: 1,\n        duration: this.props.animationDuration,\n        easing: this.props.easing,\n        useNativeDriver: false,\n      }),\n    ]\n    // @ts-ignore\n    if (this.state.opacity._value !== 1) {\n      animations.push(\n        Animated.timing(this.state.opacity, {\n          toValue: 1,\n          duration: this.props.animationDuration,\n          easing: this.props.easing,\n          useNativeDriver: true,\n        }),\n      )\n    }\n    Animated.parallel(animations, { stopTogether: false }).start((result) => {\n      if (result.finished) {\n        this.setState({ previousPath: this.getPath() }, () => {\n          // @ts-ignore\n          if (this.state.animation._value === 1) {\n            this.state.animation.setValue(0)\n          }\n        })\n      }\n    })\n  }\n\n  handleLayout = ({\n    nativeEvent: {\n      layout: { width, height },\n    },\n  }: LayoutChangeEvent) => {\n    this.setState({\n      canvasSize: {\n        x: width,\n        y: height,\n      },\n    })\n  }\n\n  render() {\n    if (!this.state.canvasSize) {\n      return null\n    }\n    return (\n      <View\n        style={this.props.style}\n        onLayout={this.handleLayout}\n        pointerEvents='none'\n      >\n        <Svg\n          pointerEvents='none'\n          width={this.state.canvasSize.x}\n          height={this.state.canvasSize.y}\n        >\n          <AnimatedSvgPath\n            ref={this.mask}\n            fill={this.props.backdropColor}\n            strokeWidth={0}\n            fillRule='evenodd'\n            d={FIRST_PATH}\n            opacity={this.state.opacity as any}\n          />\n        </Svg>\n      </View>\n    )\n  }\n}\n","import * as React from 'react'\nimport {\n  Animated,\n  Easing,\n  View,\n  StatusBar,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native'\nimport { TooltipProps, Tooltip } from './Tooltip'\nimport styles, {\n  MARGIN,\n  ARROW_SIZE,\n  STEP_NUMBER_DIAMETER,\n  STEP_NUMBER_RADIUS,\n} from './style'\nimport { Step, ValueXY, Labels } from '../types'\nimport { SvgMask } from './SvgMask'\n\ndeclare var __TEST__: boolean\n\nexport interface CopilotModalProps {\n  ref: any\n  currentStep?: Step\n  visible?: boolean\n  isFirstStep: boolean\n  isLastStep: boolean\n  animationDuration?: number\n  tooltipComponent: React.ComponentType<TooltipProps>\n  tooltipStyle?: StyleProp<ViewStyle>\n  maskOffset?: number\n  borderRadius?: number\n  androidStatusBarVisible: boolean\n  backdropColor: string\n  labels: Labels\n  easing(value: number): number\n  stop(): void\n  next(): void\n  prev(): void\n}\n\ninterface Layout {\n  x?: number\n  y?: number\n  width?: number\n  height?: number\n}\n\ninterface State {\n  tooltip: object\n  notAnimated?: boolean\n  containerVisible: boolean\n  layout?: Layout\n  size?: ValueXY\n  position?: ValueXY\n  tooltipTranslateY: Animated.Value\n  opacity: Animated.Value\n}\n\ninterface Move {\n  top: number\n  left: number\n  width: number\n  height: number\n}\n\nexport class CopilotModal extends React.Component<CopilotModalProps, State> {\n  static defaultProps = {\n    easing: Easing.elastic(0.7),\n    animationDuration: 400,\n    tooltipComponent: Tooltip as any,\n    tooltipStyle: {},\n    androidStatusBarVisible: false,\n    backdropColor: 'rgba(0, 0, 0, 0.4)',\n    labels: {},\n  }\n\n  layout?: Layout = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  }\n\n  state = {\n    tooltip: {},\n    containerVisible: false,\n    tooltipTranslateY: new Animated.Value(400),\n    opacity: new Animated.Value(0),\n    layout: undefined,\n    size: undefined,\n    position: undefined,\n  }\n\n  constructor(props: CopilotModalProps) {\n    super(props)\n  }\n\n  componentDidUpdate(prevProps: CopilotModalProps) {\n    if (prevProps.visible === true && this.props.visible === false) {\n      this.reset()\n    }\n  }\n\n  handleLayoutChange = ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n    this.layout = layout\n  }\n\n  measure(): Promise<Layout> {\n    if (typeof __TEST__ !== 'undefined' && __TEST__) {\n      return new Promise((resolve) =>\n        resolve({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n        }),\n      )\n    }\n\n    return new Promise((resolve) => {\n      const setLayout = () => {\n        if (this.layout && this.layout.width !== 0) {\n          resolve(this.layout)\n        } else {\n          requestAnimationFrame(setLayout)\n        }\n      }\n      setLayout()\n    })\n  }\n\n  async _animateMove(\n    obj: Move = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n    },\n  ) {\n    const layout = await this.measure()\n    if (!this.props.androidStatusBarVisible && Platform.OS === 'android') {\n      obj.top -= StatusBar.currentHeight || 30\n    }\n\n    let stepNumberLeft = obj.left - STEP_NUMBER_RADIUS\n\n    if (stepNumberLeft < 0) {\n      stepNumberLeft = obj.left + obj.width - STEP_NUMBER_RADIUS\n      if (stepNumberLeft > layout.width! - STEP_NUMBER_DIAMETER) {\n        stepNumberLeft = layout.width! - STEP_NUMBER_DIAMETER\n      }\n    }\n\n    const center = {\n      x: obj.left! + obj.width! / 2,\n      y: obj.top! + obj.height! / 2,\n    }\n\n    const relativeToLeft = center.x\n    const relativeToTop = center.y\n    const relativeToBottom = Math.abs(center.y - layout.height!)\n    const relativeToRight = Math.abs(center.x - layout.width!)\n\n    const verticalPosition = relativeToBottom > relativeToTop ? 'bottom' : 'top'\n    const horizontalPosition =\n      relativeToLeft > relativeToRight ? 'left' : 'right'\n\n    const tooltip = {\n      top: 0,\n      tooltip: 0,\n      bottom: 0,\n      right: 0,\n      maxWidth: 0,\n      left: 0,\n    }\n    const arrow = {\n      borderBottomColor: '',\n      top: 0,\n      borderTopColor: '',\n      bottom: 0,\n      right: 0,\n      left: 0,\n    }\n\n    if (verticalPosition === 'bottom') {\n      tooltip.top = obj.top + obj.height + MARGIN\n      arrow.borderBottomColor = '#fff'\n      arrow.top = tooltip.top - ARROW_SIZE * 2\n    } else {\n      tooltip.bottom = layout.height! - (obj.top - MARGIN)\n      arrow.borderTopColor = '#fff'\n      arrow.bottom = tooltip.bottom - ARROW_SIZE * 2\n    }\n\n    if (horizontalPosition === 'left') {\n      tooltip.right = Math.max(layout.width! - (obj.left + obj.width), 0)\n      tooltip.right =\n        tooltip.right === 0 ? tooltip.right + MARGIN : tooltip.right\n      tooltip.maxWidth = layout.width! - tooltip.right - MARGIN\n      arrow.right = tooltip.right + MARGIN\n    } else {\n      tooltip.left = Math.max(obj.left, 0)\n      tooltip.left = tooltip.left === 0 ? tooltip.left + MARGIN : tooltip.left\n      tooltip.maxWidth = layout.width! - tooltip.left - MARGIN\n      arrow.left = tooltip.left + MARGIN\n    }\n\n    const duration = this.props.animationDuration! + 200\n    const toValue =\n      verticalPosition === 'bottom' ? tooltip.top : obj.top - MARGIN - 135\n    const translateAnim = Animated.timing(this.state.tooltipTranslateY, {\n      toValue,\n      duration,\n      easing: this.props.easing,\n      delay: duration,\n      useNativeDriver: true,\n    })\n    const opacityAnim = Animated.timing(this.state.opacity, {\n      toValue: 1,\n      duration,\n      easing: this.props.easing,\n      delay: duration,\n      useNativeDriver: true,\n    })\n    this.state.opacity.setValue(0)\n    // @ts-ignore\n    if (toValue !== this.state.tooltipTranslateY._value) {\n      Animated.parallel([translateAnim, opacityAnim]).start()\n    } else {\n      opacityAnim.start()\n    }\n\n    this.setState({\n      tooltip,\n      layout,\n      size: {\n        x: obj.width,\n        y: obj.height,\n      },\n      position: {\n        x: Math.floor(Math.max(obj.left, 0)),\n        y: Math.floor(Math.max(obj.top, 0)),\n      },\n    })\n  }\n\n  animateMove(obj = {}): Promise<void> {\n    return new Promise((resolve) => {\n      this.setState({ containerVisible: true }, () =>\n        this._animateMove(obj as any).then(resolve),\n      )\n    })\n  }\n\n  reset() {\n    this.setState({\n      containerVisible: false,\n      layout: undefined,\n    })\n  }\n\n  handleNext = () => {\n    this.props.next()\n  }\n\n  handlePrev = () => {\n    this.props.prev()\n  }\n\n  handleStop = () => {\n    this.reset()\n    this.props.stop()\n  }\n\n  renderMask = () => (\n    <SvgMask\n      style={styles.overlayContainer}\n      size={this.state.size!}\n      position={this.state.position!}\n      easing={this.props.easing}\n      animationDuration={this.props.animationDuration}\n      backdropColor={this.props.backdropColor}\n      currentStep={this.props.currentStep}\n      maskOffset={this.props.maskOffset}\n      borderRadius={this.props.borderRadius}\n    />\n  )\n\n  renderTooltip() {\n    const { tooltipComponent: TooltipComponent } = this.props\n    const { opacity } = this.state\n    return (\n      <Animated.View\n        key='tooltip'\n        style={[\n          styles.tooltip,\n          this.props.tooltipStyle,\n          {\n            opacity,\n            transform: [{ translateY: this.state.tooltipTranslateY }],\n          },\n        ]}\n      >\n        <TooltipComponent\n          isFirstStep={this.props.isFirstStep}\n          isLastStep={this.props.isLastStep}\n          currentStep={this.props.currentStep!}\n          handleNext={this.handleNext}\n          handlePrev={this.handlePrev}\n          handleStop={this.handleStop}\n          labels={this.props.labels}\n        />\n      </Animated.View>\n    )\n  }\n\n  render() {\n    const containerVisible = this.state.containerVisible || this.props.visible\n    const contentVisible = this.state.layout && containerVisible\n    if (!containerVisible) {\n      return null\n    }\n    return (\n      <View\n        style={[StyleSheet.absoluteFill, { backgroundColor: 'transparent' }]}\n        pointerEvents='box-none'\n      >\n        <View\n          style={styles.container}\n          onLayout={this.handleLayoutChange}\n          pointerEvents='box-none'\n        >\n          {contentVisible && (\n            <>\n              {this.renderMask()}\n              {this.renderTooltip()}\n            </>\n          )}\n        </View>\n      </View>\n    )\n  }\n}\n","import * as React from 'react'\nimport { StyleSheet, StyleProp, ViewStyle, View } from 'react-native'\nimport mitt from 'mitt'\n\nimport { Steps, Step, Labels, StepObject } from '../types'\nimport { TourGuideContext } from '../components/TourGuideContext'\nimport { useIsMounted } from '../hooks/useIsMounted'\nimport { CopilotModal } from './CopilotModal'\nimport { TooltipProps } from './Tooltip'\nimport { OFFSET_WIDTH } from './style'\nimport * as utils from '../utilities'\n\nconst { useMemo, useEffect, useState, useRef } = React\n\n/*\nThis is the maximum wait time for the steps to be registered before starting the tutorial\nAt 60fps means 2 seconds\n*/\nconst MAX_START_TRIES = 120\n\nexport interface TourGuideProviderProps {\n  tooltipComponent?: React.ComponentType<TooltipProps>\n  tooltipStyle?: StyleProp<ViewStyle>\n  labels?: Labels\n  androidStatusBarVisible?: boolean\n  backdropColor?: string\n  verticalOffset?: number\n  wrapperStyle?: StyleProp<ViewStyle>\n  maskOffset?: number\n  borderRadius?: number\n  animationDuration?: number\n  children: React.ReactNode\n}\n\nexport const TourGuideProvider = ({\n  children,\n  wrapperStyle,\n  labels,\n  tooltipComponent,\n  tooltipStyle,\n  androidStatusBarVisible,\n  backdropColor,\n  animationDuration,\n  maskOffset,\n  borderRadius,\n  verticalOffset,\n}: TourGuideProviderProps) => {\n  const [visible, setVisible] = useState<boolean | undefined>(undefined)\n  const [currentStep, updateCurrentStep] = useState<Step | undefined>()\n  const [steps, setSteps] = useState<Steps>({})\n  const [startTries, setStartTries] = useState<number>(0)\n  console.log({ currentStep: currentStep?.name, visible })\n  const mounted = useIsMounted()\n\n  const eventEmitter = useMemo(() => new mitt(), [])\n\n  const modal = useRef<any>()\n\n  useEffect(() => {\n    if (mounted && visible === false) {\n      eventEmitter.emit('stop')\n    }\n  }, [visible])\n\n  useEffect(() => {\n    if (visible || currentStep) {\n      moveToCurrentStep()\n    }\n  }, [visible, currentStep])\n\n  const moveToCurrentStep = async () => {\n    const size = await currentStep!.target.measure()\n\n    await modal.current?.animateMove({\n      width: size.width + OFFSET_WIDTH,\n      height: size.height + OFFSET_WIDTH,\n      left: size.x - OFFSET_WIDTH / 2,\n      top: size.y - OFFSET_WIDTH / 2 + (verticalOffset || 0),\n    })\n  }\n\n  const setCurrentStep = (step?: Step) =>\n    new Promise<void>((resolve) => {\n      updateCurrentStep(() => {\n        eventEmitter.emit('stepChange', step)\n        resolve()\n        return step\n      })\n    })\n\n  const getNextStep = (step: Step | undefined = currentStep) =>\n    utils.getNextStep(steps!, step)\n\n  const getPrevStep = (step: Step | undefined = currentStep) =>\n    utils.getPrevStep(steps!, step)\n\n  const getFirstStep = () => utils.getFirstStep(steps!)\n\n  const getLastStep = () => utils.getLastStep(steps!)\n\n  const isFirstStep = useMemo(() => currentStep === getFirstStep(), [\n    currentStep,\n  ])\n\n  const isLastStep = useMemo(() => currentStep === getLastStep(), [currentStep])\n\n  const next = () => setCurrentStep(getNextStep()!)\n\n  const prev = () => setCurrentStep(getPrevStep()!)\n\n  const stop = () => {\n    setVisible(false)\n    setCurrentStep(undefined)\n  }\n\n  const registerStep = (step: Step) => {\n    setSteps((previousSteps) => ({\n      ...previousSteps,\n      [step.name]: step,\n    }))\n  }\n\n  const unregisterStep = (stepName: string) => {\n    if (!mounted) {\n      return\n    }\n    setSteps(\n      Object.entries(steps as StepObject)\n        .filter(([key]) => key !== stepName)\n        .reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {}),\n    )\n  }\n\n  const getCurrentStep = () => currentStep\n\n  const start = async (fromStep?: number) => {\n    const currentStep = fromStep\n      ? (steps as StepObject)[fromStep]\n      : getFirstStep()\n\n    if (startTries > MAX_START_TRIES) {\n      setStartTries(0)\n      return\n    }\n\n    if (!currentStep) {\n      setStartTries(startTries + 1)\n      start(fromStep)\n    } else {\n      eventEmitter.emit('start')\n      await setCurrentStep(currentStep!)\n      setVisible(true)\n      setStartTries(0)\n    }\n  }\n\n  return (\n    <View style={[styles.container, wrapperStyle]}>\n      <TourGuideContext.Provider\n        value={{\n          eventEmitter,\n          registerStep,\n          unregisterStep,\n          getCurrentStep,\n          start,\n          stop,\n        }}\n      >\n        {children}\n        <CopilotModal\n          ref={modal}\n          {...{\n            next,\n            prev,\n            stop,\n            visible,\n            isFirstStep,\n            isLastStep,\n            currentStep,\n            labels,\n            tooltipComponent,\n            tooltipStyle,\n            androidStatusBarVisible,\n            backdropColor,\n            animationDuration,\n            maskOffset,\n            borderRadius,\n          }}\n        />\n      </TourGuideContext.Provider>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n})\n","import * as React from 'react'\n\nexport const useIsMounted = () => {\n  const isMounted = React.useRef(false)\n  React.useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n  return isMounted\n}\n","import * as React from 'react'\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native'\nimport { Ionicons } from '@expo/vector-icons'\n\nimport { TourGuideZone, TourGuideProvider, useTourGuideController } from './src'\n\nconst uri =\n  'https://pbs.twimg.com/profile_images/1223192265969016833/U8AX9Lfn_400x400.jpg'\n\n// Add <TourGuideProvider/> at the root of you app!\nfunction App() {\n  return (\n    <TourGuideProvider {...{ borderRadius: 16 }}>\n      <AppContent />\n    </TourGuideProvider>\n  )\n}\n\nconst AppContent = () => {\n  const iconProps = { size: 40, color: '#888' }\n\n  // Use Hooks to control!\n  const { start, stop, eventEmitter } = useTourGuideController()\n\n  React.useEffect(() => {\n    eventEmitter.on('start', () => console.log('start'))\n    eventEmitter.on('stop', () => console.log('stop'))\n    eventEmitter.on('stepChange', () => console.log(`stepChange`))\n\n    return () => eventEmitter.off('*', null)\n  }, [])\n\n  return (\n    <View style={styles.container}>\n      {/* Use TourGuideZone only to wrap */}\n      <TourGuideZone\n        zone={2}\n        text={'A react-native-copilot remastered! 🎉'}\n        borderRadius={16}\n      >\n        <Text style={styles.title}>\n          {'Welcome to the demo of\\n\"rn-tourguide\"'}\n        </Text>\n      </TourGuideZone>\n      <View style={styles.middleView}>\n        <TouchableOpacity style={styles.button} onPress={() => start()}>\n          <Text style={styles.buttonText}>START THE TUTORIAL!</Text>\n        </TouchableOpacity>\n\n        <TourGuideZone zone={3} shape={'rectangle_and_keep'}>\n          <TouchableOpacity style={styles.button} onPress={() => start(4)}>\n            <Text style={styles.buttonText}>Step 4</Text>\n          </TouchableOpacity>\n        </TourGuideZone>\n        <TouchableOpacity style={styles.button} onPress={() => start(2)}>\n          <Text style={styles.buttonText}>Step 2</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.button} onPress={stop}>\n          <Text style={styles.buttonText}>Stop</Text>\n        </TouchableOpacity>\n        <TourGuideZone\n          zone={1}\n          shape='circle'\n          text={'With animated SVG morphing with awesome flubber 🍮💯'}\n        >\n          <Image source={{ uri }} style={styles.profilePhoto} />\n        </TourGuideZone>\n      </View>\n      <View style={styles.row}>\n        <TourGuideZone zone={4} shape={'circle'}>\n          <Ionicons name='ios-contact' {...iconProps} />\n        </TourGuideZone>\n        <Ionicons name='ios-chatbubbles' {...iconProps} />\n        <Ionicons name='ios-globe' {...iconProps} />\n        <TourGuideZone zone={5}>\n          <Ionicons name='ios-navigate' {...iconProps} />\n        </TourGuideZone>\n        <TourGuideZone zone={6} shape={'circle'}>\n          <Ionicons name='ios-rainy' {...iconProps} />\n        </TourGuideZone>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: 40,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n  },\n  profilePhoto: {\n    width: 140,\n    height: 140,\n    borderRadius: 70,\n    marginVertical: 20,\n  },\n  middleView: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  button: {\n    backgroundColor: '#2980b9',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    margin: 2,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n  },\n  row: {\n    width: '100%',\n    padding: 15,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  activeSwitchContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    alignItems: 'center',\n    paddingHorizontal: 40,\n  },\n})\n\nexport default App\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/rn-tourguide/expo-service-worker.js', { scope: '/rn-tourguide/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","export { TourGuideZone } from './components/TourGuideZone'\nexport { TourGuideProvider } from './components/TourGuideProvider'\nexport { TourGuideContext } from './components/TourGuideContext'\nexport { TooltipProps } from './components/Tooltip'\nexport { TourGuideZoneByPosition } from './components/TourGuideZoneByPosition'\nexport { useTourGuideController } from './hooks/useTourGuideController'\nexport * from './types'\n","import * as React from 'react'\nimport { Step } from '../types'\n\nexport type Handler = (event?: any) => void\nexport interface Emitter {\n  on(type: string, handler: Handler): void\n  off(type: string, handler: Handler): void\n  emit(type: string, event?: any): void\n}\n\nexport interface ITourGuideContext {\n  eventEmitter?: Emitter\n  registerStep?(step: Step): void\n  unregisterStep?(stepName: string): void\n  getCurrentStep?(): Step | undefined\n  start?(fromStep?: number): void\n  stop?(): void\n}\nexport const TourGuideContext = React.createContext<ITourGuideContext>({})\n","import * as React from 'react'\n\nimport { Shape } from '../types'\nimport { ITourGuideContext } from './TourGuideContext'\n\ndeclare var __TEST__: boolean\n\ninterface Props {\n  name: string\n  text: string\n  order: number\n  active?: boolean\n  shape?: Shape\n  _copilot: ITourGuideContext\n  children?: any\n  maskOffset?: number\n  borderRadius?: number\n}\n\nexport class ConnectedCopilotStep extends React.Component<Props> {\n  static defaultProps = {\n    active: true,\n  }\n  wrapper: any\n  componentDidMount() {\n    if (this.props.active) {\n      this.register()\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.active !== prevProps.active) {\n      if (this.props.active) {\n        this.register()\n      } else {\n        this.unregister()\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.unregister()\n  }\n\n  setNativeProps(obj: any) {\n    this.wrapper.setNativeProps(obj)\n  }\n\n  register() {\n    if (this.props._copilot) {\n      const { name, text, order, shape, maskOffset, borderRadius } = this.props\n      if (this.props._copilot.registerStep) {\n        this.props._copilot.registerStep({\n          name,\n          text,\n          order,\n          target: this,\n          wrapper: this.wrapper,\n          shape,\n          maskOffset,\n          borderRadius,\n        })\n      } else {\n        console.warn('registerStep undefined')\n      }\n    } else {\n      console.warn('_copilot undefined')\n    }\n  }\n\n  unregister() {\n    if (this.props._copilot.unregisterStep) {\n      this.props._copilot.unregisterStep(this.props.name)\n    } else {\n      console.warn('unregisterStep undefined')\n    }\n  }\n\n  measure() {\n    if (typeof __TEST__ !== 'undefined' && __TEST__) {\n      return new Promise((resolve) =>\n        resolve({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n        }),\n      )\n    }\n\n    return new Promise((resolve, reject) => {\n      const measure = () => {\n        // Wait until the wrapper element appears\n        if (this.wrapper && this.wrapper.measure) {\n          this.wrapper.measure(\n            (\n              _ox: number,\n              _oy: number,\n              width: number,\n              height: number,\n              x: number,\n              y: number,\n            ) =>\n              resolve({\n                x,\n                y,\n                width,\n                height,\n              }),\n            reject,\n          )\n        } else {\n          requestAnimationFrame(measure)\n        }\n      }\n\n      requestAnimationFrame(measure)\n    })\n  }\n\n  render() {\n    const copilot = {\n      ref: (wrapper: any) => {\n        this.wrapper = wrapper\n      },\n      onLayout: () => {}, // Android hack\n    }\n\n    return React.cloneElement(this.props.children, { copilot })\n  }\n}\n","import * as React from 'react'\n\nimport { ConnectedCopilotStep } from './ConnectedCopilotStep'\nimport { Shape } from '../types'\nimport { TourGuideContext } from './TourGuideContext'\n\ninterface Props {\n  name: string\n  order: number\n  text: string\n  shape?: Shape\n  active?: boolean\n  maskOffset?: number\n  borderRadius?: number\n  children: React.ReactNode\n}\n\nexport const CopilotStep = (props: Props) => {\n  const _copilot = React.useContext(TourGuideContext)\n  return <ConnectedCopilotStep {...{ ...props, _copilot }} />\n}\n","import * as React from 'react'\nimport { CopilotStep } from './CopilotStep'\nimport { Shape } from '../types'\nimport { CopilotWrapper } from './CopilotWrapper'\n\nexport interface TourGuideZoneProps {\n  zone: number\n  isTourGuide?: boolean\n  text?: string\n  shape?: Shape\n  maskOffset?: number\n  borderRadius?: number\n  children: React.ReactNode\n}\n\nexport const TourGuideZone = ({\n  isTourGuide = true,\n  zone,\n  children,\n  shape,\n  text,\n  maskOffset,\n  borderRadius,\n}: TourGuideZoneProps) => {\n  if (!isTourGuide) {\n    return <>{children}</>\n  }\n\n  return (\n    <CopilotStep\n      text={text ?? `Zone ${zone}`}\n      order={zone}\n      name={`${zone}`}\n      shape={shape}\n      maskOffset={maskOffset}\n      borderRadius={borderRadius}\n    >\n      <CopilotWrapper>{children}</CopilotWrapper>\n    </CopilotStep>\n  )\n}\n"],"sourceRoot":""}