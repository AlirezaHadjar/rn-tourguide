{"version":3,"sources":["src/components/ConnectedCopilotStep.tsx","src/components/CopilotStep.tsx","src/components/Button.tsx","src/components/Tooltip.tsx","src/components/AnimatedPath.tsx","src/utilities.ts","src/components/SvgMask.tsx","src/components/CopilotModal.tsx","src/hocs/copilot.tsx","src/components/style.ts","src/components/TourGuideZoneByPosition.tsx","App.tsx","web-build/register-service-worker.js","src/index.ts","src/components/TourGuideZone.tsx","src/components/CopilotWrapper.tsx"],"names":["ConnectedCopilotStep","this","props","active","register","prevProps","unregister","obj","wrapper","setNativeProps","_copilot","name","text","order","shape","maskOffset","borderRadius","registerStep","target","console","warn","unregisterStep","__TEST__","Promise","resolve","x","y","width","height","reject","requestAnimationFrame","measure","_ox","_oy","copilot","ref","onLayout","React","children","defaultProps","CopilotStep","context","contextTypes","PropTypes","object","Button","wrapperStyle","style","rest","View","styles","button","Text","buttonText","Tooltip","isFirstStep","isLastStep","handleNext","handlePrev","handleStop","currentStep","labels","paddingTop","alignItems","justifyContent","paddingBottom","backgroundColor","tooltipContainer","testID","tooltipText","bottomBar","TouchableOpacity","onPress","skip","previous","finish","next","AnimatedSvgPath","Platform","select","default","Animated","createAnimatedComponent","Path","web","getFirstStep","steps","Object","values","reduce","a","b","getLastStep","getStepNumber","step","filter","_step","length","getPrevStep","getNextStep","headPath","cleanPath","memoize","path","replace","trim","getCanvasPath","canvasPath","match","defaultSvgPath","size","position","radius","circleSvgPath","Math","max","sizeOffset","positionOffset","svgMaskPathMorph","previousPath","animation","to","interpolator","options","maxSegmentLength","optionsKeep","single","getDefaultInterpolate","interpolate","getCircleInterpolator","toCircle","separate","getInterpolator","clamp","_value","windowDimensions","Dimensions","get","FIRST_PATH","SvgMask","mask","createRef","getPath","state","animationListener","d","current","OS","_touchableNode","setAttribute","animate","animations","timing","toValue","duration","animationDuration","easing","useNativeDriver","opacity","push","parallel","stopTogether","start","result","finished","setState","setValue","handleLayout","nativeEvent","layout","canvasSize","Value","listenerID","addListener","removeListener","pointerEvents","fill","backdropColor","strokeWidth","fillRule","Component","Easing","linear","CopilotModal","tooltip","arrow","animatedValues","top","stepNumberLeft","animated","containerVisible","tooltipTranslateY","undefined","handleLayoutChange","prev","reset","stop","handleMaskClick","stopOnOutsideClick","renderMask","overlayContainer","currentStepNumber","visible","setLayout","left","androidStatusBarVisible","StatusBar","currentHeight","STEP_NUMBER_RADIUS","STEP_NUMBER_DIAMETER","center","relativeToLeft","relativeToTop","relativeToBottom","abs","relativeToRight","horizontalPosition","bottom","right","maxWidth","borderBottomColor","borderTopColor","verticalPosition","MARGIN","ARROW_SIZE","floor","async","_animateMove","TooltipComponent","tooltipComponent","key","tooltipStyle","transform","translateY","contentVisible","StyleSheet","absoluteFill","container","renderTooltip","elastic","stepNumberComponent","hideArrow","verticalOffset","WrappedComponent","CopilotClass","startTries","mounted","eventEmitter","mitt","setCurrentStep","move","emit","setTimeout","moveToCurrentStep","setVisibility","stepName","entries","val","fromStep","getCurrentStep","modal","animateMove","OFFSET_WIDTH","flex","copilotEvents","childContextTypes","isRequired","hoistStatics","create","zIndex","borderColor","borderWidth","paddingHorizontal","overflow","textAlign","stepNumberContainer","Z_INDEX","stepNumber","stepNumberText","fontSize","color","padding","marginTop","flexDirection","overlayRectangle","title","profilePhoto","marginVertical","middleView","paddingVertical","margin","row","activeSwitchContainer","marginBottom","handleStepChange","log","on","off","iconProps","zone","isTourGuide","source","uri","navigator","window","addEventListener","serviceWorker","scope","then","info","catch","error","TourGuideZone","CopilotWrapper"],"mappings":"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","file":"static/js/app.9b92f778.chunk.js","sourcesContent":["import * as React from 'react'\n\nimport { CopilotContext, Shape } from '../types'\n\ndeclare var __TEST__: boolean\n\ninterface Props {\n  name: string\n  text: string\n  order: number\n  active?: boolean\n  shape?: Shape\n  _copilot: CopilotContext\n  children?: any\n  maskOffset?: number\n  borderRadius?: number\n}\n\nclass ConnectedCopilotStep extends React.Component<Props> {\n  static defaultProps = {\n    active: true,\n  }\n  wrapper: any\n  componentDidMount() {\n    if (this.props.active) {\n      this.register()\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.active !== prevProps.active) {\n      if (this.props.active) {\n        this.register()\n      } else {\n        this.unregister()\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.unregister()\n  }\n\n  setNativeProps(obj: any) {\n    this.wrapper.setNativeProps(obj)\n  }\n\n  register() {\n    if (this.props._copilot) {\n      const { name, text, order, shape, maskOffset, borderRadius } = this.props\n      this.props._copilot.registerStep({\n        name,\n        text,\n        order,\n        target: this,\n        wrapper: this.wrapper,\n        shape,\n        maskOffset,\n        borderRadius,\n      })\n    } else {\n      console.warn('_copilot undefined')\n    }\n  }\n\n  unregister() {\n    this.props._copilot.unregisterStep(this.props.name)\n  }\n\n  measure() {\n    if (typeof __TEST__ !== 'undefined' && __TEST__) {\n      return new Promise((resolve) =>\n        resolve({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n        }),\n      )\n    }\n\n    return new Promise((resolve, reject) => {\n      const measure = () => {\n        // Wait until the wrapper element appears\n        if (this.wrapper && this.wrapper.measure) {\n          this.wrapper.measure(\n            (\n              _ox: number,\n              _oy: number,\n              width: number,\n              height: number,\n              x: number,\n              y: number,\n            ) =>\n              resolve({\n                x,\n                y,\n                width,\n                height,\n              }),\n            reject,\n          )\n        } else {\n          requestAnimationFrame(measure)\n        }\n      }\n\n      requestAnimationFrame(measure)\n    })\n  }\n\n  render() {\n    const copilot = {\n      ref: (wrapper: any) => {\n        this.wrapper = wrapper\n      },\n      onLayout: () => {}, // Android hack\n    }\n\n    return React.cloneElement(this.props.children, { copilot })\n  }\n}\n\nexport default ConnectedCopilotStep\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\n\nimport ConnectedCopilotStep from './ConnectedCopilotStep'\nimport { CopilotContext, Shape } from '../types'\n\ninterface Props {\n  name: string\n  order: number\n  text: string\n  shape?: Shape\n  active?: boolean\n  maskOffset?: number\n  borderRadius?: number\n}\n\nclass CopilotStep extends React.Component<Props> {\n  static contextTypes = {\n    _copilot: PropTypes.object,\n  }\n\n  context: {\n    _copilot: CopilotContext\n  }\n\n  render() {\n    return (\n      <ConnectedCopilotStep\n        {...{ ...this.props, _copilot: this.context._copilot }}\n      />\n    )\n  }\n}\n\nexport default CopilotStep\n","import * as React from 'react'\nimport { View, Text, StyleProp, ViewStyle } from 'react-native'\n\nimport styles from './style'\n\ninterface Props {\n  wrapperStyle?: StyleProp<ViewStyle>\n  style?: StyleProp<ViewStyle>\n  children?: any\n}\n\nconst Button = ({ wrapperStyle, style, children, ...rest }: Props) => (\n  <View style={[styles.button, wrapperStyle]}>\n    <Text style={[styles.buttonText, style]} {...rest}>\n      {children}\n    </Text>\n  </View>\n)\n\nexport default Button\n","import * as React from 'react'\nimport { View, Text, TouchableOpacity } from 'react-native'\n\nimport Button from './Button'\nimport styles from './style'\nimport { Step, Labels } from '../types'\n\nexport interface TooltipProps {\n  isFirstStep?: boolean\n  isLastStep?: boolean\n  currentStep: Step\n  labels?: Labels\n  handleNext?(): void\n  handlePrev?(): void\n  handleStop?(): void\n}\n\nexport const Tooltip = ({\n  isFirstStep,\n  isLastStep,\n  handleNext,\n  handlePrev,\n  handleStop,\n  currentStep,\n  labels,\n}: TooltipProps) => (\n  <View\n    style={{\n      borderRadius: 16,\n      paddingTop: 24,\n      alignItems: 'center',\n      justifyContent: 'center',\n      paddingBottom: 16,\n      width: '80%',\n      backgroundColor: '#ffffffef',\n    }}\n  >\n    <View style={styles.tooltipContainer}>\n      <Text testID='stepDescription' style={styles.tooltipText}>\n        {currentStep.text}\n      </Text>\n    </View>\n    <View style={[styles.bottomBar]}>\n      {!isLastStep ? (\n        <TouchableOpacity onPress={handleStop}>\n          <Button>{labels?.skip || 'Skip'}</Button>\n        </TouchableOpacity>\n      ) : null}\n      {!isFirstStep ? (\n        <TouchableOpacity onPress={handlePrev}>\n          <Button>{labels?.previous || 'Previous'}</Button>\n        </TouchableOpacity>\n      ) : null}\n      {!isLastStep ? (\n        <TouchableOpacity onPress={handleNext}>\n          <Button>{labels?.next || 'Next'}</Button>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity onPress={handleStop}>\n          <Button>{labels?.finish || 'Finish'}</Button>\n        </TouchableOpacity>\n      )}\n    </View>\n  </View>\n)\n","import * as React from 'react'\nimport { Animated, Platform } from 'react-native'\nimport { Path, PathProps } from 'react-native-svg'\n\nexport const AnimatedSvgPath: React.ComponentType<\n  PathProps & { ref: any }\n> = Platform.select({\n  default: Animated.createAnimatedComponent(Path),\n  web: Path,\n})\n","import {\n  Step,\n  Steps,\n  SVGMaskPathMorphParam,\n  ValueXY,\n  Shape,\n  SvgPath,\n} from './types'\n// @ts-ignore\nimport { interpolate, toCircle, separate } from 'flubber'\nimport memoize from 'lodash.memoize'\nimport clamp from 'lodash.clamp'\n\nexport const getFirstStep = (steps: Steps): Step | null =>\n  steps &&\n  Object.values(steps).reduce(\n    (a: Step | null, b) => (!a || a.order > b.order ? b : a),\n    null,\n  )\n\nexport const getLastStep = (steps: Steps): Step | null =>\n  steps &&\n  Object.values(steps).reduce(\n    (a: Step | null, b) => (!a || a.order < b.order ? b : a),\n    null,\n  )\n\nexport const getStepNumber = (steps: Steps, step?: Step): number | undefined =>\n  step &&\n  Object.values(steps).filter((_step) => _step.order <= step.order).length\n\nexport const getPrevStep = (steps: Steps, step?: Step): Step | null =>\n  Object.values(steps)\n    .filter((_step) => _step.order < step!.order)\n    .reduce((a: Step | null, b) => (!a || a.order < b.order ? b : a), null)\n\nexport const getNextStep = (\n  steps: Steps,\n  step?: Step,\n): Step | null | undefined =>\n  Object.values(steps)\n    .filter((_step) => _step.order > step!.order)\n    .reduce((a: Step | null, b) => (!a || a.order > b.order ? b : a), null) ||\n  step\n\nexport const hasTwoPath = (pathOrPaths: string | string[]) =>\n  typeof pathOrPaths !== 'string' && Array.isArray(pathOrPaths)\n\nexport const getFirstPath = (pathOrPaths: string | string[]): string =>\n  (!hasTwoPath(pathOrPaths) ? pathOrPaths : pathOrPaths[0]) as string\n\nexport const getSecondPath = (pathOrPaths: string | string[]) =>\n  hasTwoPath(pathOrPaths) ? pathOrPaths[1] : undefined\n\nconst headPath = /^M0,0H\\d*\\.?\\d*V\\d*\\.?\\d*H0V0Z/\nconst cleanPath = memoize((path: string) => path.replace(headPath, '').trim())\nconst getCanvasPath = memoize((path: string) => {\n  const canvasPath = path.match(headPath)\n  if (canvasPath) {\n    return canvasPath[0]\n  }\n  return ''\n})\n\nexport const defaultSvgPath = ({\n  size,\n  position,\n  borderRadius: radius,\n}: {\n  size: ValueXY\n  position: ValueXY\n  borderRadius: number\n}): SvgPath => {\n  if (radius) {\n    return `M${position.x},${position.y}H${\n      position.x + size.x\n    } a${radius},${radius} 0 0 1 ${radius},${radius}V${\n      position.y + size.y - radius\n    } a${radius},${radius} 0 0 1 -${radius},${radius}H${\n      position.x\n    } a${radius},${radius} 0 0 1 -${radius},-${radius}V${\n      position.y + radius\n    } a${radius},${radius} 0 0 1 ${radius},-${radius}Z`\n  }\n  return `M${position.x},${position.y}H${position.x + size.x}V${\n    position.y + size.y\n  }H${position.x}V${position.y}Z`\n}\n\nexport const circleSvgPath = ({\n  size,\n  position,\n}: {\n  size: ValueXY\n  position: ValueXY\n}): SvgPath => {\n  const radius = Math.max(size.x, size.y) / 2\n  return `M${position.x},${position.y}A${radius} ${radius} 0 1 0 ${\n    radius * 2\n  } 0 ${radius} ${radius} 0 1 0 -${radius * 2} 0`\n}\n\nconst sizeOffset = (size: ValueXY, maskOffset: number = 0) =>\n  maskOffset\n    ? {\n        x: size.x + maskOffset,\n        y: size.y + maskOffset,\n      }\n    : size\n\nconst positionOffset = (position: ValueXY, maskOffset: number = 0) =>\n  maskOffset\n    ? {\n        x: position.x - maskOffset / 2,\n        y: position.y - maskOffset / 2,\n      }\n    : position\n\nconst getInterpolator = (\n  previousPath: string,\n  shape: Shape,\n  position: ValueXY,\n  size: ValueXY,\n  maskOffset: number = 0,\n  borderRadius: number = 0,\n) => {\n  const options = { maxSegmentLength: 5 }\n  const optionsKeep = { single: true }\n  const getDefaultInterpolate = () =>\n    interpolate(\n      previousPath,\n      defaultSvgPath({\n        size: sizeOffset(size, maskOffset),\n        position: positionOffset(position, maskOffset),\n        borderRadius,\n      }),\n      options,\n    )\n  const getCircleInterpolator = () =>\n    toCircle(\n      previousPath,\n      position.x + size.x / 2,\n      position.y + size.y / 2,\n      Math.max(size.x, size.y) / 2 + maskOffset,\n      options,\n    )\n  switch (shape) {\n    case 'circle':\n      return getCircleInterpolator()\n    case 'rectangle':\n      return getDefaultInterpolate()\n    case 'circle_and_keep':\n      return separate(\n        previousPath,\n        [\n          previousPath,\n          circleSvgPath({ size: sizeOffset(size, maskOffset), position }),\n        ],\n        optionsKeep,\n      )\n    case 'rectangle_and_keep':\n      return separate(\n        previousPath,\n        [\n          defaultSvgPath({\n            size: sizeOffset(size, maskOffset),\n            position: positionOffset(position, maskOffset),\n            borderRadius,\n          }),\n          previousPath,\n        ],\n        optionsKeep,\n      )\n    default:\n      return getDefaultInterpolate()\n  }\n}\n\nexport const svgMaskPathMorph = ({\n  previousPath,\n  animation,\n  to: { position, size, shape, maskOffset, borderRadius },\n}: SVGMaskPathMorphParam) => {\n  const interpolator = getInterpolator(\n    cleanPath(previousPath),\n    shape!,\n    position,\n    size,\n    maskOffset,\n    borderRadius,\n  )\n  // console.warn({ interpolator })\n\n  return `${getCanvasPath(previousPath)}${interpolator(\n    clamp(animation._value, 0, 1),\n  )}`\n}\n","import React, { Component } from 'react'\nimport {\n  View,\n  Animated,\n  Easing,\n  Dimensions,\n  StyleProp,\n  ViewStyle,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  Platform,\n} from 'react-native'\nimport Svg, { PathProps } from 'react-native-svg'\n\nimport { AnimatedSvgPath } from './AnimatedPath'\nimport { ValueXY, Step } from '../types'\nimport { svgMaskPathMorph } from '../utilities'\n\nconst windowDimensions = Dimensions.get('window')\n\ninterface Props {\n  size: ValueXY\n  position: ValueXY\n  style: StyleProp<ViewStyle>\n  animationDuration?: number\n  animated: boolean\n  backdropColor: string\n  currentStepNumber?: number\n  maskOffset?: number\n  borderRadius?: number\n  currentStep?: Step\n  easing?: (value: number) => number\n  onClick?(event: GestureResponderEvent): boolean\n}\n\ninterface State {\n  size: ValueXY\n  position: ValueXY\n  previousSize?: ValueXY\n  previousPosition?: ValueXY\n  previousStepNumber?: number\n  opacity: Animated.Value\n  animation: Animated.Value\n  canvasSize: ValueXY\n  previousPath: string\n}\n\nconst FIRST_PATH = `M0,0H${windowDimensions.width}V${\n  windowDimensions.height\n}H0V0ZM${windowDimensions.width / 2},${\n  windowDimensions.height / 2\n} h 1 v 1 h -1 Z`\n\nclass SvgMask extends Component<Props, State> {\n  static defaultProps = {\n    easing: Easing.linear,\n    size: { x: 0, y: 0 },\n    position: { x: 0, y: 0 },\n    maskOffset: 0,\n  }\n\n  listenerID: any\n  mask: React.RefObject<PathProps> = React.createRef()\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      canvasSize: {\n        x: windowDimensions.width,\n        y: windowDimensions.height,\n      },\n      size: props.size,\n      position: props.position,\n      opacity: new Animated.Value(0),\n      animation: new Animated.Value(0),\n      previousPath: FIRST_PATH,\n    }\n\n    this.listenerID = this.state.animation.addListener(this.animationListener)\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.position !== this.props.position ||\n      prevProps.size !== this.props.size\n    ) {\n      this.animate()\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.listenerID) {\n      this.state.animation.removeListener(this.listenerID)\n    }\n  }\n\n  getPath = () => {\n    const { previousPath, animation } = this.state\n    const { size, position, currentStep, maskOffset, borderRadius } = this.props\n    return svgMaskPathMorph({\n      animation: animation as any,\n      previousPath,\n      to: {\n        position,\n        size,\n        shape: currentStep?.shape,\n        maskOffset: currentStep?.maskOffset || maskOffset,\n        borderRadius: currentStep?.borderRadius || borderRadius,\n      },\n    })\n  }\n\n  animationListener = (): void => {\n    const d = this.getPath()\n    if (this.mask && this.mask.current) {\n      if (Platform.OS !== 'web') {\n        // @ts-ignore\n        this.mask.current?.setNativeProps({ d })\n      } else {\n        // @ts-ignore\n        this.mask.current._touchableNode.setAttribute('d', d)\n      }\n    }\n  }\n\n  animate = () => {\n    const animations = [\n      Animated.timing(this.state.animation, {\n        toValue: 1,\n        duration: this.props.animationDuration,\n        easing: this.props.easing,\n        useNativeDriver: true,\n      }),\n    ]\n    // @ts-ignore\n    if (this.state.opacity._value !== 1) {\n      animations.push(\n        Animated.timing(this.state.opacity, {\n          toValue: 1,\n          duration: this.props.animationDuration,\n          easing: this.props.easing,\n          useNativeDriver: true,\n        }),\n      )\n    }\n    Animated.parallel(animations, { stopTogether: false }).start((result) => {\n      if (result.finished) {\n        this.setState({ previousPath: this.getPath() }, () => {\n          // @ts-ignore\n          if (this.state.animation._value === 1) {\n            this.state.animation.setValue(0)\n          }\n        })\n      }\n    })\n  }\n\n  handleLayout = ({\n    nativeEvent: {\n      layout: { width, height },\n    },\n  }: LayoutChangeEvent) => {\n    this.setState({\n      canvasSize: {\n        x: width,\n        y: height,\n      },\n    })\n  }\n\n  render() {\n    if (!this.state.canvasSize) {\n      return null\n    }\n    const path = this.getPath()\n    return (\n      <View\n        style={this.props.style}\n        onLayout={this.handleLayout}\n        pointerEvents='none'\n      >\n        <Svg\n          pointerEvents='none'\n          width={this.state.canvasSize.x}\n          height={this.state.canvasSize.y}\n        >\n          <AnimatedSvgPath\n            ref={this.mask}\n            fill={this.props.backdropColor}\n            strokeWidth={0}\n            fillRule='evenodd'\n            d={path}\n            opacity={this.state.opacity as any}\n          />\n        </Svg>\n      </View>\n    )\n  }\n}\n\nexport default SvgMask\n","import * as React from 'react'\nimport {\n  Animated,\n  Easing,\n  View,\n  StatusBar,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native'\nimport { TooltipProps, Tooltip } from './Tooltip'\nimport styles, {\n  MARGIN,\n  ARROW_SIZE,\n  STEP_NUMBER_DIAMETER,\n  STEP_NUMBER_RADIUS,\n} from './style'\nimport { Step, ValueXY, Labels } from '../types'\nimport SvgMask from './SvgMask'\n\ndeclare var __TEST__: boolean\n\ninterface Props {\n  currentStepNumber: number\n  currentStep?: Step\n  visible: boolean\n  isFirstStep: boolean\n  isLastStep: boolean\n  animationDuration?: number\n  tooltipComponent: React.ComponentType<TooltipProps>\n  tooltipStyle?: StyleProp<ViewStyle>\n  stepNumberComponent: any\n  maskOffset?: number\n  borderRadius?: number\n  animated: boolean\n  androidStatusBarVisible: boolean\n  backdropColor: string\n  labels: Labels\n  stopOnOutsideClick?: boolean\n  hideArrow?: boolean\n  easing(value: number): number\n  stop(): void\n  next(): void\n  prev(): void\n}\n\ninterface Layout {\n  x?: number\n  y?: number\n  width?: number\n  height?: number\n}\n\ninterface State {\n  tooltip: object\n  arrow: object\n  animatedValues: object\n  notAnimated?: boolean\n  containerVisible: boolean\n  animated?: boolean\n  layout?: Layout\n  size?: ValueXY\n  position?: ValueXY\n}\n\ninterface Move {\n  top: number\n  left: number\n  width: number\n  height: number\n}\n\nclass CopilotModal extends React.Component<Props, State> {\n  static defaultProps = {\n    easing: Easing.elastic(0.7),\n    animationDuration: 400,\n    tooltipComponent: Tooltip as any,\n    tooltipStyle: {},\n    stepNumberComponent: undefined,\n    // If animated was not specified, rely on the default overlay type\n    animated: true,\n    androidStatusBarVisible: false,\n    backdropColor: 'rgba(0, 0, 0, 0.4)',\n    labels: {},\n    stopOnOutsideClick: false,\n    hideArrow: false,\n  }\n\n  layout?: Layout = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  }\n\n  state = {\n    tooltip: {},\n    arrow: {},\n    animatedValues: {\n      top: new Animated.Value(0),\n      stepNumberLeft: new Animated.Value(0),\n    },\n    animated: true,\n    containerVisible: false,\n    tooltipTranslateY: new Animated.Value(400),\n    opacity: new Animated.Value(1),\n    layout: undefined,\n    size: undefined,\n    position: undefined,\n  }\n\n  constructor(props: Props) {\n    super(props)\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible === true && this.props.visible === false) {\n      this.reset()\n    }\n  }\n\n  handleLayoutChange = ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n    this.layout = layout\n  }\n\n  measure(): Promise<Layout> {\n    if (typeof __TEST__ !== 'undefined' && __TEST__) {\n      return new Promise((resolve) =>\n        resolve({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n        }),\n      )\n    }\n\n    return new Promise((resolve) => {\n      const setLayout = () => {\n        if (this.layout && this.layout.width !== 0) {\n          resolve(this.layout)\n        } else {\n          requestAnimationFrame(setLayout)\n        }\n      }\n      setLayout()\n    })\n  }\n\n  async _animateMove(\n    obj: Move = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n    },\n  ) {\n    const layout = await this.measure()\n    if (!this.props.androidStatusBarVisible && Platform.OS === 'android') {\n      obj.top -= StatusBar.currentHeight || 30\n    }\n\n    let stepNumberLeft = obj.left - STEP_NUMBER_RADIUS\n\n    if (stepNumberLeft < 0) {\n      stepNumberLeft = obj.left + obj.width - STEP_NUMBER_RADIUS\n      if (stepNumberLeft > layout.width! - STEP_NUMBER_DIAMETER) {\n        stepNumberLeft = layout.width! - STEP_NUMBER_DIAMETER\n      }\n    }\n\n    const center = {\n      x: obj.left! + obj.width! / 2,\n      y: obj.top! + obj.height! / 2,\n    }\n\n    const relativeToLeft = center.x\n    const relativeToTop = center.y\n    const relativeToBottom = Math.abs(center.y - layout.height!)\n    const relativeToRight = Math.abs(center.x - layout.width!)\n\n    const verticalPosition = relativeToBottom > relativeToTop ? 'bottom' : 'top'\n    const horizontalPosition =\n      relativeToLeft > relativeToRight ? 'left' : 'right'\n\n    const tooltip = {\n      top: 0,\n      tooltip: 0,\n      bottom: 0,\n      right: 0,\n      maxWidth: 0,\n      left: 0,\n    }\n    const arrow = {\n      borderBottomColor: '',\n      top: 0,\n      borderTopColor: '',\n      bottom: 0,\n      right: 0,\n      left: 0,\n    }\n\n    if (verticalPosition === 'bottom') {\n      tooltip.top = obj.top + obj.height + MARGIN\n      arrow.borderBottomColor = '#fff'\n      arrow.top = tooltip.top - ARROW_SIZE * 2\n    } else {\n      tooltip.bottom = layout.height! - (obj.top - MARGIN)\n      arrow.borderTopColor = '#fff'\n      arrow.bottom = tooltip.bottom - ARROW_SIZE * 2\n    }\n\n    if (horizontalPosition === 'left') {\n      tooltip.right = Math.max(layout.width! - (obj.left + obj.width), 0)\n      tooltip.right =\n        tooltip.right === 0 ? tooltip.right + MARGIN : tooltip.right\n      tooltip.maxWidth = layout.width! - tooltip.right - MARGIN\n      arrow.right = tooltip.right + MARGIN\n    } else {\n      tooltip.left = Math.max(obj.left, 0)\n      tooltip.left = tooltip.left === 0 ? tooltip.left + MARGIN : tooltip.left\n      tooltip.maxWidth = layout.width! - tooltip.left - MARGIN\n      arrow.left = tooltip.left + MARGIN\n    }\n\n    Animated.timing(this.state.tooltipTranslateY, {\n      toValue:\n        verticalPosition === 'bottom' ? tooltip.top : obj.top - MARGIN - 125,\n      duration: this.props.animationDuration,\n      easing: this.props.easing,\n      useNativeDriver: true,\n    }).start()\n\n    this.setState({\n      tooltip,\n      arrow,\n      layout,\n      animated: this.props.animated,\n      size: {\n        x: obj.width,\n        y: obj.height,\n      },\n      position: {\n        x: Math.floor(Math.max(obj.left, 0)),\n        y: Math.floor(Math.max(obj.top, 0)),\n      },\n    })\n  }\n\n  animateMove(obj = {}): Promise<void> {\n    return new Promise((resolve) => {\n      this.setState({ containerVisible: true }, () =>\n        requestAnimationFrame(async () => {\n          await this._animateMove(obj as any)\n          resolve()\n        }),\n      )\n    })\n  }\n\n  reset(): void {\n    this.setState({\n      animated: false,\n      containerVisible: false,\n      layout: undefined,\n    })\n  }\n\n  handleNext = () => {\n    this.props.next()\n  }\n\n  handlePrev = () => {\n    this.props.prev()\n  }\n\n  handleStop = () => {\n    this.reset()\n    this.props.stop()\n  }\n\n  handleMaskClick = () => {\n    if (this.props.stopOnOutsideClick) {\n      this.handleStop()\n    }\n  }\n\n  renderMask = () => (\n    <SvgMask\n      animated={this.props.animated}\n      style={styles.overlayContainer}\n      size={this.state.size!}\n      position={this.state.position!}\n      easing={this.props.easing}\n      animationDuration={this.props.animationDuration}\n      backdropColor={this.props.backdropColor}\n      currentStepNumber={this.props.currentStepNumber}\n      currentStep={this.props.currentStep}\n      maskOffset={this.props.maskOffset}\n      borderRadius={this.props.borderRadius}\n    />\n  )\n\n  renderTooltip() {\n    const { tooltipComponent: TooltipComponent } = this.props\n    return [\n      <Animated.View\n        key='tooltip'\n        style={[\n          styles.tooltip,\n          this.props.tooltipStyle,\n          { transform: [{ translateY: this.state.tooltipTranslateY }] },\n        ]}\n      >\n        <TooltipComponent\n          isFirstStep={this.props.isFirstStep}\n          isLastStep={this.props.isLastStep}\n          currentStep={this.props.currentStep!}\n          handleNext={this.handleNext}\n          handlePrev={this.handlePrev}\n          handleStop={this.handleStop}\n          labels={this.props.labels}\n        />\n      </Animated.View>,\n    ]\n  }\n\n  render() {\n    const containerVisible = this.state.containerVisible || this.props.visible\n    const contentVisible = this.state.layout && containerVisible\n    if (!containerVisible) {\n      return null\n    }\n    return (\n      <View\n        style={[StyleSheet.absoluteFill, { backgroundColor: 'transparent' }]}\n        pointerEvents='box-none'\n      >\n        <View\n          style={styles.container}\n          onLayout={this.handleLayoutChange}\n          pointerEvents='box-none'\n        >\n          {contentVisible && (\n            <>\n              {this.renderMask()}\n              {this.renderTooltip()}\n            </>\n          )}\n        </View>\n      </View>\n    )\n  }\n}\n\nexport default CopilotModal\n","import * as React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { View, StyleProp, ViewStyle } from 'react-native'\n\nimport mitt from 'mitt'\nimport hoistStatics from 'hoist-non-react-statics'\n\nimport CopilotModal from '../components/CopilotModal'\nimport { OFFSET_WIDTH } from '../components/style'\n\nimport {\n  getFirstStep,\n  getLastStep,\n  getStepNumber,\n  getPrevStep,\n  getNextStep,\n} from '../utilities'\n\nimport { Step, Steps, StepObject, Labels } from '../types'\nimport { TooltipProps } from '../components/Tooltip'\n\n/*\nThis is the maximum wait time for the steps to be registered before starting the tutorial\nAt 60fps means 2 seconds\n*/\nconst MAX_START_TRIES = 120\n\ninterface State {\n  steps?: Steps\n  currentStep?: Step\n  visible: boolean\n  androidStatusBarVisible?: boolean\n  backdropColor?: string\n  stopOnOutsideClick?: boolean\n}\n\nexport interface CopilotOptionProps {\n  tooltipComponent?: React.ComponentType<TooltipProps>\n  tooltipStyle?: StyleProp<ViewStyle>\n  animated?: boolean\n  labels?: Labels\n  androidStatusBarVisible?: boolean\n  backdropColor?: string\n  stopOnOutsideClick?: boolean\n  verticalOffset?: number\n  wrapperStyle?: StyleProp<ViewStyle>\n  maskOffset?: number\n  borderRadius?: number\n  animationDuration?: number\n}\n\nexport const copilot = ({\n  tooltipComponent,\n  tooltipStyle,\n  animated,\n  labels,\n  androidStatusBarVisible,\n  backdropColor,\n  stopOnOutsideClick = false,\n  verticalOffset = 0,\n  wrapperStyle,\n  animationDuration,\n  maskOffset,\n  borderRadius,\n}: CopilotOptionProps = {}) => (WrappedComponent: any): any => {\n  class CopilotClass extends React.Component<any, State> {\n    state: State = {\n      steps: undefined,\n      currentStep: undefined,\n      visible: false,\n    }\n\n    startTries = 0\n\n    mounted = false\n\n    eventEmitter = new mitt()\n\n    modal: any\n\n    constructor(props: any) {\n      super(props)\n    }\n\n    getChildContext() {\n      return {\n        _copilot: {\n          registerStep: this.registerStep,\n          unregisterStep: this.unregisterStep,\n          getCurrentStep: () => this.state.currentStep!,\n        },\n      }\n    }\n\n    componentDidMount() {\n      this.mounted = true\n    }\n\n    componentWillUnmount() {\n      this.mounted = false\n    }\n\n    getStepNumber = (\n      step: Step | undefined = this.state.currentStep,\n    ): number | undefined => getStepNumber(this.state.steps!, step)\n\n    getFirstStep = (): Step | undefined | null =>\n      getFirstStep(this.state.steps!)\n\n    getLastStep = (): Step | undefined | null => getLastStep(this.state.steps!)\n\n    getPrevStep = (\n      step: Step | undefined = this.state.currentStep,\n    ): Step | undefined | null => getPrevStep(this.state.steps!, step)\n\n    getNextStep = (\n      step: Step | undefined = this.state.currentStep,\n    ): Step | undefined | null => getNextStep(this.state.steps!, step)\n\n    setCurrentStep = async (\n      step: Step,\n      move: boolean = true,\n    ): Promise<void> => {\n      this.setState({ currentStep: step })\n      this.eventEmitter.emit('stepChange', step)\n\n      setTimeout(() => {\n        if (move) {\n          this.moveToCurrentStep()\n        }\n      }, 0)\n    }\n\n    setVisibility = (visible: boolean): Promise<void> =>\n      new Promise((resolve) => {\n        this.setState({ visible }, () => resolve())\n      })\n\n    isFirstStep = (): boolean => this.state.currentStep === this.getFirstStep()\n\n    isLastStep = (): boolean => this.state.currentStep === this.getLastStep()\n\n    registerStep = (step: Step): void => {\n      this.setState(({ steps }) => ({\n        steps: {\n          ...steps,\n          [step.name]: step,\n        },\n      }))\n    }\n\n    unregisterStep = (stepName: string): void => {\n      if (!this.mounted) {\n        return\n      }\n      this.setState(({ steps }) => ({\n        steps: Object.entries(steps as StepObject)\n          .filter(([key]) => key !== stepName)\n          .reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {}),\n      }))\n    }\n\n    next = async (): Promise<void> => {\n      await this.setCurrentStep(this.getNextStep()!)\n    }\n\n    prev = async (): Promise<void> => {\n      await this.setCurrentStep(this.getPrevStep()!)\n    }\n\n    start = async (fromStep?: string): Promise<void> => {\n      const { steps } = this.state\n\n      const currentStep = fromStep\n        ? (steps as StepObject)[fromStep]\n        : this.getFirstStep()\n\n      if (this.startTries > MAX_START_TRIES) {\n        this.startTries = 0\n        return\n      }\n\n      if (!currentStep) {\n        this.startTries += 1\n        requestAnimationFrame(() => this.start(fromStep))\n      } else {\n        this.eventEmitter.emit('start')\n        await this.setCurrentStep(currentStep)\n        await this.moveToCurrentStep()\n        await this.setVisibility(true)\n        this.startTries = 0\n      }\n    }\n\n    stop = async (): Promise<void> => {\n      await this.setVisibility(false)\n      this.eventEmitter.emit('stop')\n    }\n\n    async moveToCurrentStep(): Promise<void> {\n      const size = await this.state.currentStep!.target.measure()\n\n      await this.modal.animateMove({\n        width: size.width + OFFSET_WIDTH,\n        height: size.height + OFFSET_WIDTH,\n        left: size.x - OFFSET_WIDTH / 2,\n        top: size.y - OFFSET_WIDTH / 2 + verticalOffset,\n      })\n    }\n\n    render() {\n      return (\n        <View style={wrapperStyle || { flex: 1 }}>\n          <WrappedComponent\n            {...this.props}\n            start={this.start}\n            stop={this.stop}\n            currentStep={this.state.currentStep}\n            visible={this.state.visible}\n            copilotEvents={this.eventEmitter}\n          />\n          <CopilotModal\n            ref={(modal) => {\n              this.modal = modal\n            }}\n            next={this.next}\n            prev={this.prev}\n            stop={this.stop}\n            visible={this.state.visible}\n            isFirstStep={this.isFirstStep()}\n            isLastStep={this.isLastStep()}\n            currentStepNumber={this.getStepNumber()!}\n            currentStep={this.state.currentStep}\n            labels={labels}\n            tooltipComponent={tooltipComponent}\n            tooltipStyle={tooltipStyle}\n            animated={animated}\n            androidStatusBarVisible={androidStatusBarVisible}\n            backdropColor={backdropColor}\n            stopOnOutsideClick={stopOnOutsideClick}\n            animationDuration={animationDuration}\n            maskOffset={maskOffset}\n            borderRadius={borderRadius}\n          />\n        </View>\n      )\n    }\n  }\n  // @ts-ignore\n  CopilotClass.childContextTypes = {\n    _copilot: PropTypes.object.isRequired,\n  }\n\n  return hoistStatics(CopilotClass, WrappedComponent)\n}\n","import { StyleSheet } from 'react-native'\n\nexport const STEP_NUMBER_RADIUS: number = 14\nexport const STEP_NUMBER_DIAMETER: number = STEP_NUMBER_RADIUS * 2\nexport const Z_INDEX: number = 100\nexport const MARGIN: number = 13\nexport const OFFSET_WIDTH: number = 4\nexport const ARROW_SIZE: number = 6\n\nexport default StyleSheet.create({\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: Z_INDEX,\n  },\n  arrow: {\n    position: 'absolute',\n    borderColor: 'transparent',\n    borderWidth: ARROW_SIZE,\n  },\n  tooltip: {\n    position: 'absolute',\n    paddingHorizontal: 15,\n    overflow: 'hidden',\n    width: '100%',\n    borderRadius: 16,\n    paddingTop: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 16,\n  },\n  tooltipText: {\n    textAlign: 'center',\n  },\n  tooltipContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    width: '80%',\n  },\n  stepNumberContainer: {\n    position: 'absolute',\n    width: STEP_NUMBER_DIAMETER,\n    height: STEP_NUMBER_DIAMETER,\n    overflow: 'hidden',\n    zIndex: Z_INDEX + 1,\n  },\n  stepNumber: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    borderRadius: STEP_NUMBER_RADIUS,\n    borderColor: '#FFFFFF',\n    backgroundColor: '#27ae60',\n  },\n  stepNumberText: {\n    fontSize: 10,\n    backgroundColor: 'transparent',\n    color: '#FFFFFF',\n  },\n  button: {\n    padding: 10,\n  },\n  buttonText: {\n    color: '#27ae60',\n  },\n  bottomBar: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  overlayRectangle: {\n    position: 'absolute',\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  },\n  overlayContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  },\n})\n","import * as React from 'react'\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native'\nimport { TourGuideZone } from './TourGuideZone'\nimport { CopilotWrapper } from './CopilotWrapper'\nimport { Shape } from '../types'\n\ninterface TourGuideZoneByPositionProps {\n  zone: number\n  isTourGuide?: boolean\n  top?: number\n  left?: number\n  right?: number\n  bottom?: number\n  width?: number\n  height?: number\n  shape?: Shape\n  containerStyle?: StyleProp<ViewStyle>\n}\n\nexport const TourGuideZoneByPosition = ({\n  isTourGuide,\n  zone,\n  width,\n  height,\n  top,\n  left,\n  right,\n  bottom,\n  shape,\n  containerStyle,\n}: TourGuideZoneByPositionProps) => {\n  if (!isTourGuide) {\n    return null\n  }\n\n  return (\n    <View\n      pointerEvents='none'\n      style={[StyleSheet.absoluteFillObject, containerStyle]}\n    >\n      <TourGuideZone zone={zone} isTourGuide shape={shape}>\n        <CopilotWrapper\n          style={{\n            height,\n            width,\n            top,\n            right,\n            bottom,\n            left,\n          }}\n        />\n      </TourGuideZone>\n    </View>\n  )\n}\n","import * as React from 'react'\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native'\nimport { Ionicons } from '@expo/vector-icons'\n\nimport {\n  copilot,\n  TourGuideZone,\n  CopilotWrapper,\n  Step,\n  TourGuideZoneByPosition,\n} from './src'\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: 40,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n  },\n  profilePhoto: {\n    width: 140,\n    height: 140,\n    borderRadius: 70,\n    marginVertical: 20,\n  },\n  middleView: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  button: {\n    backgroundColor: '#2980b9',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    margin: 2,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n  },\n  row: {\n    width: '100%',\n    padding: 15,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  activeSwitchContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    alignItems: 'center',\n    paddingHorizontal: 40,\n  },\n})\n\ninterface Props {\n  copilotEvents: any\n  start(stepNumber?: number): void\n  stop(): void\n}\n\nfunction App({ copilotEvents, start, stop }: Props) {\n  const handleStepChange = (step: Step) =>\n    console.log(`Current step is: ${step.name}`)\n\n  React.useEffect(() => {\n    copilotEvents.on('stepChange', handleStepChange)\n\n    return () => {\n      copilotEvents.off('*')\n    }\n  }, [])\n  const iconProps = { size: 40, color: '#888' }\n  return (\n    <>\n      <View style={styles.container}>\n        <TourGuideZone\n          zone={1}\n          isTourGuide\n          text={'A react-native-copilot remastered! 🎉'}\n          borderRadius={16}\n        >\n          <CopilotWrapper>\n            <Text style={styles.title}>\n              {'Welcome to the demo of\\n\"rn-tourguide\"'}\n            </Text>\n          </CopilotWrapper>\n        </TourGuideZone>\n        <View style={styles.middleView}>\n          <TourGuideZone\n            zone={3}\n            isTourGuide\n            shape='circle'\n            text={'With animated SVG morphing with awesome flubber 🍮💯'}\n          >\n            <CopilotWrapper>\n              <Image\n                source={{\n                  uri:\n                    'https://pbs.twimg.com/profile_images/1223192265969016833/U8AX9Lfn_400x400.jpg',\n                }}\n                style={styles.profilePhoto}\n              />\n            </CopilotWrapper>\n          </TourGuideZone>\n\n          <TouchableOpacity style={styles.button} onPress={() => start()}>\n            <Text style={styles.buttonText}>START THE TUTORIAL!</Text>\n          </TouchableOpacity>\n\n          <TourGuideZone zone={2} isTourGuide shape={'rectangle_and_keep'}>\n            <CopilotWrapper>\n              <TouchableOpacity style={styles.button} onPress={() => start(4)}>\n                <Text style={styles.buttonText}>Step 4</Text>\n              </TouchableOpacity>\n            </CopilotWrapper>\n          </TourGuideZone>\n          <TouchableOpacity style={styles.button} onPress={() => start(2)}>\n            <Text style={styles.buttonText}>Step 2</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.button} onPress={stop}>\n            <Text style={styles.buttonText}>Stop</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.row}>\n          <TourGuideZone zone={4} isTourGuide shape={'circle'}>\n            <CopilotWrapper>\n              <Ionicons name='ios-contact' {...iconProps} />\n            </CopilotWrapper>\n          </TourGuideZone>\n          <Ionicons name='ios-chatbubbles' {...iconProps} />\n          <Ionicons name='ios-globe' {...iconProps} />\n          <TourGuideZone zone={5} isTourGuide>\n            <CopilotWrapper>\n              <Ionicons name='ios-navigate' {...iconProps} />\n            </CopilotWrapper>\n          </TourGuideZone>\n          <TourGuideZone zone={6} isTourGuide shape={'circle'}>\n            <CopilotWrapper>\n              <Ionicons name='ios-rainy' {...iconProps} />\n            </CopilotWrapper>\n          </TourGuideZone>\n        </View>\n      </View>\n    </>\n  )\n}\n\n// {/* <TourGuideZoneByPosition\n//         zone={7}\n//         shape={'circle'}\n//         isTourGuide\n//         bottom={30}\n//         left={35}\n//         width={300}\n//         height={300}\n//       /> */}\n\nexport default copilot({\n  animated: true,\n  androidStatusBarVisible: false,\n  borderRadius: 16,\n})(App)\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/rn-tourguide/expo-service-worker.js', { scope: '/rn-tourguide/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import CopilotStep from './components/CopilotStep'\n\nexport { copilot, CopilotOptionProps } from './hocs/copilot'\nexport { TourGuideZone } from './components/TourGuideZone'\nexport { TooltipProps } from './components/Tooltip'\nexport { TourGuideZoneByPosition } from './components/TourGuideZoneByPosition'\nexport { CopilotWrapper } from './components/CopilotWrapper'\nexport { CopilotStep }\nexport * from './types'\n","import * as React from 'react'\nimport CopilotStep from './CopilotStep'\nimport { Shape } from '../types'\n\ninterface TourGuideZoneProps {\n  zone: number\n  isTourGuide?: boolean\n  text?: string\n  shape?: Shape\n  maskOffset?: number\n  borderRadius?: number\n  children: React.ReactNode\n}\n\nexport const TourGuideZone = ({\n  isTourGuide,\n  zone,\n  children,\n  shape,\n  text,\n  maskOffset,\n  borderRadius,\n}: TourGuideZoneProps) => {\n  if (!isTourGuide) {\n    return <>{children}</>\n  }\n\n  return (\n    <CopilotStep\n      text={text ?? `Zone ${zone}`}\n      order={zone}\n      name={`${zone}`}\n      shape={shape}\n      maskOffset={maskOffset}\n      borderRadius={borderRadius}\n    >\n      {children}\n    </CopilotStep>\n  )\n}\n","import * as React from 'react'\nimport { View, StyleProp, ViewStyle } from 'react-native'\n\ninterface CopilotWrapperProps {\n  copilot?: any\n  children?: React.ReactNode\n  style?: StyleProp<ViewStyle>\n}\nexport const CopilotWrapper = ({\n  copilot,\n  children,\n  style,\n}: CopilotWrapperProps) => (\n  <View style={style} {...copilot}>\n    {children}\n  </View>\n)\n"],"sourceRoot":""}